---
title: Effects of Climate Change on Estuarine Fish Assemblages
abstract: This is a test abstract
authors:
  - name: Garrett Miller
    orcid: 0009-0007-6253-2554
    affiliation:
      - name: The University of South Florida
        department: College of Marine Science
format:
  html:
    self-contained: true
    toc: true
    toc-location: left
    toc-expand: true
    mainfont: Times New Roman
  docx:
    toc: true
    fig-format: svg
    fig-dpi: 600
reference-doc: results_formatting.docx
editor: visual
bibliography: references.bib
csl: ecology.csl
---

```{r loadLibraries}
#| include: FALSE
library(tidyverse)
library(patchwork)
library(lubridate)
library(vegan)
library(BiodiversityR)
#library(MASS)
#library(colortools)
library(ggrepel)
library(RColorBrewer)
library(egg)
library(ggallin)
library(ggpmisc) #for labeling
library(broom) #for labeling
library(DHARMa)
library(gridExtra)
library(gridGraphics)
library(grid)
library(pander)
library(pixiedust) #for model output formats
library(emmeans)
library(viridis)
library(ggplot2)
library(flextable)
library(officedown)
library(kableExtra)

Sys.setenv(FISHBASE_API="sealifebase")
#knitr::opts_chunk$set(echo = FALSE, ft.keepnext = F)
#knitr::opts_chunk$set(echo = TRUE)
  

# set_flextable_defaults(
#   font.size = 12,
#   font.color = "#333333",
#   table.layout = "fixed",
#   border.color = "gray",
#   padding.top = 3, padding.bottom = 3,
#   padding.left = 4, padding.right = 4)

```

{{< pagebreak >}}

# Introduction {#sec-introduction .unnumbered}

Global climate change is having strong effects on biodiversity and associated ecosystem structure and functions [@Doney2012; @Poloczanska2016; @Murphy2020]. Shifts in species distributions [@McCarty2001], changes in phenology [@Stenseth2002], and changes in biodiversity [@Dornelas2019] have been observed globally. However, the direction and magnitude of change varies. For example, species richness is declining around the equator and increasing at midlatitudes [@Chaudhary2021]. Some taxa are migrating poleward while others remain unchanged in distribution [@Parmesan1999; @Perry2005; @Chivers2017]. Given that changes in biodiversity can affect ecosystem stability [@Hautier2015], there has been increased concern about how climate change will alter ecosystems, including rainforests [@Levine2016], coral reefs [@Toth2019], and estuaries [@Erickson2021]. However, our understanding of changes in ecosystem stability has been limited by a paucity of long-term time series data [but see @Dornelas2018]. Further, many ecosystems at lower latitudes have received comparatively less attention than those at higher latitudes. Understanding stability in these lower latitude ecosystems can shed light on their responses to climate change and broaden our understanding about generalities.

Temperature is known to affect population-level demographics in several ways, including the sex ratio of offspring [@Ospina-Alvarez2008], growth rates of young [@Raventos2021], and individual survivorship [@Stevens2016]. However, the effects of shifting temperatures are more nuanced at the community level. Studies have highlighted such influences as changes in seasonal weather extremes [@Easterling2000; @Miner2021], shifts in season duration [@Cooper2014], and variation in disturbance frequency, intensity, and duration [@Dale2001], among others. Such factors can drive community-level change in different magnitudes and directions. For example, as distributions of taxa shift in response to warming temperature, the invasion of predators and new pathogens can lead to the extirpation of native species [@Sax2007]. Although average temperatures are increasing globally, the magnitude of these changes may not be consistent among seasons, with warming expected to occur more quickly in the winter than the summer for many ecosystems [@Clark2020]. This seasonal imbalance in temperature change has already contributed to the global poleward expansion of mangroves and is linked to a reduction in frequency and intensity of cold weather events [@Saintilan2014]. Given the importance of season on biota globally, such asymmetric change in temperature may have complex effects. For example, the intensity of a preceding winter is associated with the structure of estuarine fish assemblages the following spring [@Curran2019]. In addition, the concurrent increase in temperature variability due to climate change has been demonstrated to directly influence species richness and community stability [@Zhang2018]. Within marine systems, there is evidence that regions at lower latitude have become less stable compared to their higher latitude counterparts due to their responses to temperature [@Miner2021].

The eastern Gulf of Mexico (eGOM) is a productive subtropical region that supports diverse communities including mangrove- and salt marsh-dominated estuaries, seagrass systems, and hardbottom reefs. The region is bisected by the Northern Gulf of Mexico ecoregion to the north and Floridian to the south, which are characterized by compositionally different marine assemblages [@Spalding2007]. Seagrass systems throughout the eGOM act as important juvenile habitats for many fishes and exhibit high regional variability in the populations and communities they support [@Schrandt2018; @Faletti2019; @Peake2022]. Globally, temperate ecosystems are undergoing tropicalization, with previously rare or absent tropically-associated taxa increasing in abundance through time [@Nakamura2013; @Osland2021]. The effects of these new taxa are profound and can lead to regime shifts [@Verges2014; @Wernberg2016]. Yet, there is evidence that some subtropical ecosystems are resilient to tropicalization due to additional factors, such as dispersal limitations of new taxa [@Mizerek2021]. In the eGOM, a reduced frequency of extreme cold events has been linked to the expansion of three co-occurring mangrove species in Florida estuaries [@Cavanaugh2014]. This is already creating novel mangrove-marsh assemblages [@Cook-Patton2015] and shifts in faunal communities are predicted to follow [@Scheffel2018]. Indeed, warmer winter temperatures have been associated with the poleward expansion of a mangrove-associated fish species in this region [@Purtlebaugh2020] and has affected community stability in other estuarine systems in North America [@Miner2021].

Increased abundance of tropically-associated taxa had already been observed in northern Gulf of Mexico seagrass systems as early as 2006, potentially indicating tropicalization by taxa from the Floridian ecoregion [@Fodrie2010]. However, Fodrie et al. [-@Fodrie2010] was restricted to the northernmost edge of the eGOM as well as only the summer and fall seasons. Further, assemblages commonly differ between summer and winter in subtropical and temperate estuaries [@Hagan2003; @Strydom2015; @Schrandt2020]. Thus, it is unclear how estuarine systems across the broader eGOM may be responding to climate change, especially in the context of imbalanced changes in average seasonal temperatures. Long-term data collected consistently within and across multiple eGOM estuaries that span temperate and subtropical latitudes can improve our ability to evaluate the stability of these assemblages and establish a timeline of tropicalization in this region. Long-term time series data are available in the eGOM, where estuarine fish composition and abundance surveys have been conducted monthly since 1997 and followed consistent study designs and methods. Using these data, I investigated whether fish assemblages in estuaries within the eGOM changed over a 23-year period and if there was a potential response to climate change. Specifically, I addressed the following questions: 1) Has water temperature and submerged aquatic vegetation coverage changed in eGOM estuaries over a 23-year period? 2) Has the richness and abundance of fishes within eGOM estuarine fish assemblages changed over this same time period and, if so, are these changes related to water temperature? 3) Has the composition and stability of eGOM estuarine fish assemblages changed over time?

# Methods {#sec-methods .unnumbered}

## Data Collection {#sec-data-collection}

This study used data collected by the Florida Fish and Wildlife Research Institute's (FWRI) Fisheries Independent Monitoring (FIM) program. The program follows a monthly stratified random sampling design in estuaries across Florida, including four in the eastern Gulf of Mexico (from north to south: Apalachicola Bay (AB), Cedar Key (CK), Tampa Bay (TB), and Charlotte Harbor (CH); @fig-FIMsystems). Apalachicola Bay is a shallow, semi-enclosed estuary located on the northern coast of the GOM in the panhandle of Florida, USA and is within the Northern Gulf of Mexico ecoregion [@Spalding2007]. Cedar Key is located within the Suwannee River open estuary system and is also in the Northern Gulf of Mexico ecoregion. Tampa Bay is Florida's largest open water estuary and lies within the Floridian ecoregion [@Spalding2007]. Charlotte Harbor, a drowned river estuary system, is within the Floridian ecoregion [@FWRIFloridaFishandWildlifeResearchInstitute2017]. All systems are dominated by seagrass vegetation in shallow waters, except for Apalachicola Bay, where seagrass is less than 7% of bottom coverage [@FWRIFloridaFishandWildlifeResearchInstitute2017]. However, sampling gear was partly determined by habitat, where all seagrass at particular depths were sampled with the same gear type across estuaries [â‰¤1.8-m deep; see also below, @FWRIFloridaFishandWildlifeResearchInstitute2017]. Finally, salt marsh and oyster beds are dominant along shorelines in Apalachicola Bay and Cedar Key, while mangroves dominate in Charlotte Harbor, and Tampa Bay is characterized by a mix of salt marsh, oyster beds, and mangroves [@FWRIFloridaFishandWildlifeResearchInstitute2017].

![Locations of all estuarine systems in this study.](conceptFigs/FIMsystems.png){#fig-FIMsystems}

Sampling was divided into zones (subdivided into 1-nm^2^ grids) within each estuarine system based on geographic, habitat, and depth criteria [@FWRIFloridaFishandWildlifeResearchInstitute2017]. These criteria defined which of three different types of gear were used to collect organisms. For this study, I used data from the 21.3-m seine sampling gear because it was used the longest and most consistently throughout the study period. Specifically, this gear targeted young-of-year and juvenile fishes in shallow habitats (â‰¤1.8-m deep). For every seine haul (hereafter referred to as "sampling event"), all vertebrates and select commercially-important invertebrates were counted and identified to the lowest practical taxonomic level (typically species). I used all available summer and winter seine net data from 1998 to 2020. I filtered each sampling event by season, with summer defined as June-September and winter as December-March, following Schrandt and MacDonald [-@Schrandt2020]. To reduce potential effects of *in situ* species-level misidentification, I aggregated certain taxa to the genus level due to similarity in appearance ([@tbl-diffID]). A visual estimate of the submerged aquatic vegetation (SAV) coverage was recorded for each sampling event. Finally, a YSI sonde was used to record water temperature at the surface of the water and the bottom during each sampling event. For my analyses, I calculated the average of the two water temperature values to produce a mean water column temperature for each sampling event.

In total, 17,492 sampling events occurred where at least one taxon was caught and counted during summer and winter in any of the four systems. For seven sampling events, water temperature data were unavailable and thus excluded from the analyses. Further, I removed hauls composed solely of rare species (taxa found in â‰¤5% of all samples for that system and season) from the analyses which reduced the sample count to 17,254. Overall, the dataset contained 299 taxa recorded over 23 years of collections.

```{r}
#| label: tbl-diffID
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "Taxa that were difficult to identify in the field and subsequently aggregated at the genus level to reduce misidentification effects."
diffTaxa <- read.csv(file = "conceptFigs/diffIDTaxa.csv") %>%
  mutate(Genus = ifelse(Genus == "", NA, Genus)) %>%
  fill(Genus)

taxaFT <- flextable(diffTaxa) %>%
  merge_v(j = ~ Genus) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  italic(part = "body") %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")

# taxaFT <- diffTaxa %>%
#   kbl() %>%
#   kable_classic(full_width = F) %>%
#   collapse_rows(columns = 1) %>%
#   row_spec(1, italic = TRUE) %>%
#   row_spec(7, italic = TRUE) %>%
#   column_spec(1, italic = TRUE)

taxaFT

```

```{r}
#| label: Models
#| include: FALSE
#| warning: FALSE
#| cache: FALSE
source("RichnessModel.R")

```

```{r}
#| label: Temp_BVC
#| include: FALSE
#| message: FALSE
#| cache: TRUE
source("tempBVC.R")

abundStats <- SXS_filtered %>%
  select(!c(systemSeason, seasonYear, systemZone, BottomVegCover, Temperature)) %>%
  pivot_longer(cols = !c(Reference),
               names_to = "taxa") %>% #pivot to reference and taxa only
  mutate(nRaw = value^4) %>%
  group_by(Reference) %>%
  summarise(abundRaw = sum(nRaw)) %>% #sum all abundance values 
  mutate(abund = abundRaw^0.25) %>%
  left_join(SXS_filtered) %>%
  ungroup() %>%
    separate(systemSeason,
           c("system","season"),
           sep = "_",
           remove = FALSE) %>%
  group_by(season) %>%
  summarise(meanAb = mean(abundRaw),
            sdAb = sd(abundRaw),
            nAb = length(abundRaw),
            q10Ab = quantile(abundRaw, 0.1),
            q90Ab = quantile(abundRaw, 0.9)) %>%
  mutate(seAb = sdAb/sqrt(nAb))

nStats <- SXR_filtered_spp %>%
  left_join(SXS_filtered_env) %>%
  left_join(monthly) %>%
  group_by(systemSeason) %>%
  add_count(name = "n_hauls") %>% #count number of hauls per systemSeason
  ungroup() %>%
    separate(systemSeason,
           c("system","season"),
           sep = "_",
           remove = FALSE) %>%
  group_by(season) %>%
  summarise(meanBVC = mean(BottomVegCover),
            meanTemp = mean(Temperature),
            meanN = mean(N),
            sdTemp = sd(Temperature),
            sdBVC = sd(BottomVegCover),
            sdN = sd(N),
            nTemp = length(Temperature),
            nBVC = length(BottomVegCover),
            nN = length(N),
            q10Temp = quantile(Temperature, 0.1),
            q10BVC = quantile(BottomVegCover, 0.1),
            q10N = quantile(N, 0.1),
            q90Temp = quantile(Temperature, 0.9),
            q90BVC = quantile(BottomVegCover, 0.9),
            q90N = quantile(N, 0.9)) %>%
  mutate(seTemp = sdTemp/sqrt(nTemp),
         seBVC = sdBVC/sqrt(nBVC),
         seN = sdN/sqrt(nN))

hydroSummary <- waterBVC_full %>%
  group_by(season) %>%
  summarise(meanTempFull = mean(meanTemp),
            meanBVCFull = mean(meanBVC),
            sdTempFull = sd(meanTemp),
            sdBVCFull = sd(meanBVC),
            nTempFull = length(meanTemp),
            nBVCFull = length(meanBVC),
            seTempFull = sdTempFull/sqrt(nTempFull),
            seBVCFull = sdBVCFull/sqrt(nBVCFull))

#pairwise emmeans
winterSummaryAll <- lsmeans(winterLm, spec = "system", contr = "revpairwise")
summerSummaryAll <- lsmeans(summerLm, spec = "system", contr = "revpairwise")

winterSumAll <- tidy(winterSummaryAll$lsmeans)
summerSumAll <- tidy(summerSummaryAll$lsmeans)

#pairwise slope checks
winterContrasts <- lstrends(winterLm, ~ system, var = "smallYear", contr = "revpairwise")
summerContrasts <- lstrends(summerLm, ~ system, var = "smallYear", contr = "revpairwise")

winterSlope <- tidy(winterContrasts$lstrends)
summerSlope <- tidy(summerContrasts$lstrends)

winterSummary <- tidy(summary.lm(winterLm))
summerSummary <- tidy(summary.lm(summerLm))

winterBVCSummary <- tidy(summary.lm(winterBVCLm))
summerBVCSummary <- tidy(summary.lm(summerBVCLm))

#pairwise emmeans
winterSummaryBVCAll <- lsmeans(winterBVCLm, spec = "system", contr = "revpairwise")
summerSummaryBVCAll <- lsmeans(summerBVCLm, spec = "system", contr = "revpairwise")

winterSumBVCAll <- tidy(winterSummaryBVCAll$lsmeans)
summerSumBVCAll <- tidy(summerSummaryBVCAll$lsmeans)

#pairwise slope checks
winterBVCContrasts <- lstrends(winterBVCLm, ~ system, var = "smallYear", contr = "revpairwise")
summerBVCContrasts <- lstrends(summerBVCLm, ~ system, var = "smallYear", contr = "revpairwise")

BVCwinterSlope <- tidy(winterBVCContrasts$lstrends)
BVCsummerSlope <- tidy(summerBVCContrasts$lstrends)

winterSummaryANC <- tidy(winterLm)
summerSummaryANC <- tidy(summerLm)

winterBVCSummaryANC <- tidy(winterBVCLm)
summerBVCSummaryANC <- tidy(summerBVCLm)
```

## Data Analyses {#sec-data-analyses}

I conducted all analyses using the R Statistical Computing Environment v4.3.0 with an alpha of 0.05 for all significance testing [@R2023]. Unless otherwise indicated, I reported values from all analyses as mean Â± SE and generated plots with R packages *ggplot2* and *patchwork* [@ggplot2; @patchwork]. To address if SAV coverage and water temperature have changed over time in eGOM estuarine systems, I used Analysis of Covariance (ANCOVA) models, with Year as a continuous predictor (fixed) and estuarine System as a categorical predictor (fixed, 4 levels: Apalachicola Bay, Cedar Key, Tampa Bay, Charlotte Harbor) plus their interaction. Given the well-documented seasonal differences in estuarine systems [see @Hagan2003; @Strydom2015; @Schrandt2020], in this and all subsequent analyses, I separately analyzed summer and winter. The formula used for each ANCOVA was:

``` r
response ~ Year + System + Year:System
```

where response was either mean annual percent SAV coverage or mean annual water temperature. When the interaction between Year and System was not significant, I dropped the term and reran the test as an additive model. For significant interactions between Year and System, I ran independent linear models by Year for each system within each season. Prior to this analysis, I removed any outlier data from years in which temperatures were anomalously higher or lower (\>2.5 standard deviations) than the long-term average (e.g.,Â winter of 2010). I performed post-hoc contrasts for any significant terms in these models to determine the magnitude of differences in means across systems using the *emmeans* package and used the Tukey method for *p*-value correction [@emmeans].

To test whether the richness and abundance of fishes from the focal estuaries changed over the study period and assess the effects of water temperature on these assemblages, I modeled total richness and total abundance per sampling event across all systems for both the summer and winter seasons using generalized linear mixed models (GLMMs) from the R package *glmmTMB* [@glmmTMB]. For each sampling event, I calculated the richness as the number of distinct taxa present and total abundance as the sum of all enumerated individuals. In this and all subsequent analyses, I fourth-root transformed the abundance data prior to summation to reduce the effects of overly abundant taxa. For each model, the predictors were Year (fixed, continuous), System (fixed, categorical with 4 levels: Apalachicola Bay, Cedar Key, Tampa Bay, Charlotte Harbor), Water Temperature (fixed, continuous), and SAV Coverage (fixed, continuous) as predictors. I also included an interaction term between Year and System and treated it the same as in the above-described models. I applied a z-score transformation to SAV Coverage and Water Temperature to enable comparison of relative effect sizes. Since sampling events were conducted in consecutive months, I included a first-order autoregressive covariance term in each model based on sampling month to account for temporal autocorrelation [@glmmTMB]. This covariance term included within-system zone as a random grouping effect to further address spatial autocorrelation . Given that species richness is strongly affected by sampling effort [@Mittelbach2019], I included an offset term to account for variation in the number of sampling events. Thus, I used the following formula for each model:

``` r
response ~ Year + System + Year:System + Temp_Z + SAV_Z + offset(log(n_hauls)) + ar1(yearMonth + 0|systemZone)
```

where `response` was either total richness or fourth-root transformed total abundance per haul. I again used the *emmeans* package for post-hoc contrasts of means and the Tukey method for *p*-value correction [@emmeans].

To examine the composition and stability of eGOM estuarine fish assemblages over time, I started with a univariate approach examining beta diversity with Bray-Curtis dissimilarity over time. I first calculated the mean annual abundance of each taxon for each system within each season. I used the R package *betapart* to then calculate Bray-Curtis dissimilarity annually with respect to the first year of available data [@betapart]. I modeled this dissimilarity index over time with ANCOVA using the formula:

``` r
beta diversity index ~ Year + System + Year:System
```

I treated the interaction term the same as described above. I then used permutational multivariate analysis of variance (PERMANOVA) from the R package *vegan* to evaluate the effect of Year (fixed, categorical) and System (fixed, four levels), plus their interaction, within season on square-root transformed Bray-Curtis dissimilarities of the fourth-root transformed assemblage data [@vegan]. I used square-root transformed Bray-Curtis dissimilarity matrices to provide a more conservative estimate of the variance explained by the subsequent PERMANOVAs [@Legendre1999]. The resultant models used were thus:

``` r
(Bray-Curtis matrix)^0.5 ~ Year + System + Year:System
```

I handled the interaction term in the same manner as described above. I generated canonical analysis of principal coordinates (CAP) ordinations using the R package *BiodiversityR* to visualize patterns across Years for any PERMANOVAs that indicated a significant effect of Year within each System and season [*sensu* @Peake2022; @BiodiversityR]. In addition, I included taxon biplot correlation vectors in these CAP ordinations to visualize which taxa contributed to any observed differences in groups. I applied the Pythagorean theorem to the first two axis scores of each taxon vector to evaluate its relative magnitude. To explore the effects of SAV coverage and water temperature on the assemblages, I performed distance-based redundancy analysis (dbRDA) with the R package *vegan* using the same square-root transformed Bray-Curtis dissimilarities stated above [@vegan]. The resultant formula was thus:

``` r
(Bray-Curtis matrix)^0.5 ~ Year + Temp_Z + SAV_Z
```

Finally, I followed methods described in Dornelas et al. [-@Dornelas2019] to assess whether the abundance of individual taxa had changed over time. Within each system and season, I ran a linear model on the average annual fourth-root transformed abundance for each taxon against time to calculate both the magnitude and direction of change. I binned the model coefficients to construct histograms that displayed the distribution and magnitude of rates of change for each system within season. I then assessed the balance of how many taxa increased or decreased significantly in abundance for each system within season. Finally, I pulled climatological association data from FishBase using the R package *rfishbase* and examined whether there were patterns in the climatological associations of any taxa that underwent significant change [@rfishbase].

# Results {#sec-results .unnumbered}

```{r}
#| label: DeltaTaxa
#| include: FALSE
#| message: FALSE
#| cache: TRUE
source("DeltaTaxa.R")

sigSummaryShort <- sigSummary %>%
  select(system, season, count, sigCount, posCount, negCount)

posSigRaw <- t.test(pos_percent ~ season, data = sigSummary, alternative = "greater")
posSig <- broom::tidy(posSigRaw)
negSigRaw <- t.test(neg_percent ~ season, data = sigSummary, alternative = "greater")
negSig <- broom::tidy(negSigRaw)
sigSigRaw <- t.test(sig_percent ~ season, data = sigSummary, alternative = "two.sided")
sigSig <- broom::tidy(sigSigRaw)

sigSigSys <- aov(sig_percent ~ system, data = sigSummary)
sigSigSys_tidy <- broom::tidy(sigSigSys)

sigDiff <- sigSummary %>%
  mutate(diff = abs(posCount - negCount)) %>%
  group_by(season) %>%
  summarise(diff)

sigDelRaw <- t.test(diff ~ season, data = sigDiff)
sigDel <- broom::tidy(sigDelRaw)

winDiff <- sigDiff %>%
  filter(season == "winter")

sumDiff <- sigDiff %>%
  filter(season == "summer")

minSlope <- which(abs(sigSlopes$raw_slope - 0) == min(abs(sigSlopes$raw_slope - 0)))

minSpSlope <- sigSlopes[minSlope,]
```

## Overview {#sec-overview}

Throughout the 23-year study period, water temperature increased during winter for all estuary systems at a rate more than triple that observed during the summer ([@fig-TempPlot]). Percent submerged aquatic vegetation (SAV) displayed more nuanced dynamics, with SAV increases observed in Charlotte Harbor and Tampa Bay, a decrease in SAV in Cedar Key during summer, and no observed SAV change in Apalachicola Bay ([@fig-BVCPlot]). Of the `r ncol(SXS_filtered_spp)` total taxa examined, `r length(unique(sigSlopes$Scientificname))` had significant changes in abundance over time across all systems, nearly equally balanced between positive and negative changes.

## Habitat Dynamics {#sec-habitat-parameters}

```{r}
#| label: tempBVCtake2
#| include: FALSE
#| message: FALSE
#| cache: TRUE

#no temp interaction
winterFinal <- aov(meanTemp ~ system + smallYear, data = winterTemp)
winterFinalTidy <- tidy(summary.lm(winterFinal))
summerFinal <- aov(meanTemp ~ system + smallYear, data = summerTemp)
summerFinalTidy <- tidy(summary.lm(summerFinal))

#pairwise emmeans
winterMeansLm <- lsmeans(winterFinal, spec = "system", contr = "revpairwise")
summerMeansLm <- lsmeans(summerFinal, spec = "system", contr = "revpairwise")

#individual bvc b/c interaction
BVC_AP_winter <- winterBVC %>%
  filter(system == "AP")
BVC_CK_winter <- winterBVC %>%
  filter(system == "CK")
BVC_TB_winter <- winterBVC %>%
  filter(system == "TB")
BVC_CH_winter <- winterBVC %>%
  filter(system == "CH")

BVC_AP_summer <- summerBVC %>%
  filter(system == "AP")
BVC_CK_summer <- summerBVC %>%
  filter(system == "CK")
BVC_TB_summer <- summerBVC %>%
  filter(system == "TB")
BVC_CH_summer <- summerBVC %>%
  filter(system == "CH")

BVC_AP_winter.model <- aov(meanBVC ~ smallYear, data = BVC_AP_winter)
BVC_CK_winter.model <- aov(meanBVC ~ smallYear, data = BVC_CK_winter)
BVC_TB_winter.model <- aov(meanBVC ~ smallYear, data = BVC_TB_winter)
BVC_CH_winter.model <- aov(meanBVC ~ smallYear, data = BVC_CH_winter)

BVC_AP_summer.model <- aov(meanBVC ~ smallYear, data = BVC_AP_summer)
BVC_CK_summer.model <- aov(meanBVC ~ smallYear, data = BVC_CK_summer)
BVC_TB_summer.model <- aov(meanBVC ~ smallYear, data = BVC_TB_summer)
BVC_CH_summer.model <- aov(meanBVC ~ smallYear, data = BVC_CH_summer)
```

### Water Temperature

During the 23-year study period, water temperature increased consistently across all systems (Year:System interaction term for summer *p* = `r scales::pvalue(as.data.frame(summerSummaryANC$p.value)[3,])` and winter *p* = `r scales::pvalue(as.data.frame(winterSummaryANC$p.value)[3,])`). Winter water temperature increased at a rate of `r format(as.data.frame(winterFinalTidy$estimate)[5,], digits = 2)`Â°Cyr^-1^ Â± `r format(winterFinalTidy[5,]$std.error, digits = 2)` which was over three times that during summer (`r format(as.data.frame(summerFinalTidy$estimate)[5,], digits = 2)`Â°Cyr^-1^ Â± `r format(summerFinalTidy[5,]$std.error, digits = 2)`; @fig-TempPlot). Despite the consistency in the rates of increase, post-hoc contrasts revealed the long-term mean water temperatures differed among most systems, with Charlotte Harbor consistently warmer than all other estuaries in both seasons (*p* \<0.05 for 9 out of 12 pairwise comparisons; @tbl-tempMeans).

```{r}
#| label: tbl-tempMeans
#| echo: FALSE 
#| message: FALSE 
#| tbl-cap: "Least square means of water temperature in each system for both seasonal linear models." 

tempMeanOut <- as.data.frame(summary(summerMeansLm$lsmeans)) %>%
  mutate(Season = "Summer", .before = system) %>%
  full_join(as.data.frame(summary(winterMeansLm$lsmeans))) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season),
         system = fct_recode(system, "AB" = "AP")) %>%
  select(!c(lower.CL, upper.CL)) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("lsmean", "SE"), digits = 3) %>%
  #colformat_double(j = c("SE"), digits = 2) %>%
  set_header_labels(system = "System", 
    lsmean = "Estimated mean", 
    SE = "Standard error") %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")
  
tempMeanOut
```

```{r}
#| label: fig-TempPlot
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| fig-width: 6.5
#| fig-height: 6
#| fig-cap: "Annually averaged water temperature over time. Error bars represent Â± 1 standard error. Slopes of lines are derived from ANCOVA models."

levels(winterTemp$system)[levels(winterTemp$system)=="AP"] <- "AB"
levels(summerTemp$system)[levels(summerTemp$system)=="AP"] <- "AB"

winterTempPred <- predict(winterFinal)
summerTempPred <- predict(summerFinal)

(seasonTempPlot <- ggplot(winterTemp,
                aes(x     = contYear, 
                    y     = meanTemp, 
                    group = system,
                    shape = system
                )) + 
    geom_point(alpha = 0.8,
               size = 2) +
    geom_errorbar(aes(ymin = meanTemp-seTemp, ymax = meanTemp+seTemp),
                  data = winterTemp,
                alpha = 0.4) +
    geom_point(data = summerTemp,
                alpha = 0.8,
               size = 2) +
    geom_errorbar(aes(ymin = meanTemp-seTemp, ymax = meanTemp+seTemp),
                  data = summerTemp,
                alpha = 0.4) +
    geom_line(aes(y=winterTempPred)) +
    geom_line(data = summerTemp,
              aes(y=summerTempPred)) +
    labs(#title = "Annual Water Temperature Over Time",
      x     = "Year",
      y     = "Mean annual water temperature (Â°C)",
      shape = "System"
      #fill  = NULL
    ) +
    #scale_color_brewer(palette = "PuOr") +
    #scale_color_viridis_d() +
    scale_shape_manual(values = c(0, 1, 15, 16)) +
    theme_bw() +
    facet_wrap(~season,
               nrow = 2,
               scales = "free_y",
    labeller = labeller(
        season = c(`summer` = "Summer", `winter` = "Winter")
    )) +
    theme(
      legend.position = "bottom"
    )) +
  theme(text = element_text(family = 'serif'))
```

### Submerged Aquatic Vegetation

The dynamics of SAV differed across systems within each season (Year:System interaction term for summer *p* = `r scales::pvalue(as.data.frame(summerBVCSummaryANC$p.value)[3,])` and winter *p* = `r scales::pvalue(as.data.frame(winterBVCSummaryANC$p.value)[3,])`). Therefore, I used independent models for each system and season combination. Significant changes in SAV coverage during the study period occurred in Charlotte Harbor (increased for both seasons; *p* \<0.05; @tbl-bvcAncova), Tampa Bay (increased in winter; *p* \<0.05; @tbl-bvcAncova), and Cedar Key (decreased in summer; *p* \<0.05; @tbl-bvcAncova). The northernmost system in this study, Apalachicola Bay, did not have any significant change in SAV over the sampling period (@fig-BVCPlot; @tbl-bvcAncova). In addition, mean annual percent SAV differed across all systems within each season wherein northern systems averaged less SAV than southern systems in both seasons (*p* \<0.05 for all pairwise comparisons; @tbl-bvcMeans; see also @tbl-bvcMeanContrasts).

```{r}
#| label: tbl-bvcAncova 
#| echo: FALSE 
#| message: FALSE 
#| tbl-cap: "Slopes of SAV change over time for all independent linear models. Bold rows highlight terms where *p* <0.05." 

# pander(summerSummary)
# pander(winterSummary)

tidy_BVC_AP_winter.model <- tidy(summary.lm(BVC_AP_winter.model)) %>%
  mutate(Season = "Winter",
         System = "AB", .before = term)
tidy_BVC_CK_winter.model <- tidy(summary.lm(BVC_CK_winter.model)) %>%
  mutate(Season = "Winter",
         System = "CK", .before = term)
tidy_BVC_TB_winter.model <- tidy(summary.lm(BVC_TB_winter.model)) %>%
  mutate(Season = "Winter",
         System = "TB", .before = term)
tidy_BVC_CH_winter.model <- tidy(summary.lm(BVC_CH_winter.model)) %>%
  mutate(Season = "Winter",
         System = "CH", .before = term)

tidy_BVC_AP_summer.model <- tidy(summary.lm(BVC_AP_summer.model)) %>%
  mutate(Season = "Summer",
         System = "AB", .before = term)
tidy_BVC_CK_summer.model <- tidy(summary.lm(BVC_CK_summer.model)) %>%
  mutate(Season = "Summer",
         System = "CK", .before = term)
tidy_BVC_TB_summer.model <- tidy(summary.lm(BVC_TB_summer.model)) %>%
  mutate(Season = "Summer",
         System = "TB", .before = term)
tidy_BVC_CH_summer.model <- tidy(summary.lm(BVC_CH_summer.model)) %>%
  mutate(Season = "Summer",
         System = "CH", .before = term)

fullBVC <- bind_rows(tidy_BVC_AP_summer.model,
                     tidy_BVC_CK_summer.model,
                     tidy_BVC_TB_summer.model,
                     tidy_BVC_CH_summer.model,
                     tidy_BVC_AP_winter.model,
                     tidy_BVC_CK_winter.model,
                     tidy_BVC_TB_winter.model,
                     tidy_BVC_CH_winter.model
) %>%
  filter(term == "smallYear")

bvcANCOVAft <- fullBVC %>%
  select(!c(term)) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("estimate", "std.error", "p.value"), digits = 3) %>%
  colformat_double(j = c("statistic"), digits = 2) %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(term = "Term", 
    estimate = "Slope", 
    std.error = "Standard error",
    statistic = "t-statistic",
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(2:6)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")

bvcANCOVAft
```

```{r}
#| label: tbl-bvcMeans
#| echo: FALSE 
#| message: FALSE 
#| tbl-cap: "Least square means of SAV in each system for both seasonal linear models." 

bvcMeanOut <- as.data.frame(summary(summerSummaryBVCAll$lsmeans)) %>%
  mutate(Season = "Summer", .before = system) %>%
  full_join(as.data.frame(summary(winterSummaryBVCAll$lsmeans))) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season),
         system = fct_recode(system, "AB" = "AP")) %>%
  select(!c(lower.CL, upper.CL)) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("lsmean", "SE"), digits = 3) %>%
  set_header_labels(system = "System", 
    lsmean = "Estimated mean", 
    SE = "Standard error") %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")
  
bvcMeanOut

```

```{r BVCPlot}
#| label: fig-BVCPlot 
#| echo: FALSE 
#| message: FALSE 
#| fig-width: 6.5 
#| fig-height: 6 
#| fig-cap: "Annually averaged SAV coverage over time. Error bars represent Â± 1 standard error. Solid lines indicate significant modeled trends and dashed lines indicate non-significant trends, per each independent linear model."

levels(winterBVC$system)[levels(winterBVC$system)=="AP"] <- "AB"
levels(summerBVC$system)[levels(summerBVC$system)=="AP"] <- "AB"

(fullBVCPlot <- ggplot(summerBVC,
                aes(x     = contYear, 
                    y     = meanBVC, 
                    group = system,
                    shape = system
                )) + 
    geom_point(alpha = 0.8,
               size = 2) +
    geom_errorbar(aes(ymin = meanBVC-seBVC, ymax = meanBVC+seBVC),
                data = summerBVC,
                alpha = 0.4) +
    geom_point(data = winterBVC,
                alpha = 0.8,
               size = 2) +
    geom_errorbar(aes(ymin = meanBVC-seBVC, ymax = meanBVC+seBVC),
                data = winterBVC,
                alpha = 0.4) +
    coord_cartesian(ylim = c(0, 62)) +
    geom_smooth(method = "lm", 
                formula = y ~ x,
                se = FALSE,
                data = summerBVC[summerBVC$system %in% c("CK", "CH"),],
                linetype = "solid",
                color = "black",
                linewidth = 0.5) +
    geom_smooth(method = "lm", 
                formula = y ~ x,
                se = FALSE,
                data = summerBVC[summerBVC$system %in% c("AB", "TB"),],
                linetype = "dashed",
                color = "black",
                linewidth = 0.5) +
    geom_smooth(method = "lm", 
                formula = y ~ x,
                se = FALSE,
                data = winterBVC[winterBVC$system %in% c("TB", "CH"),],
                linetype = "solid",
                color = "black",
                linewidth = 0.5) +
    geom_smooth(method = "lm", 
                formula = y ~ x,
                se = FALSE,
                data = winterBVC[winterBVC$system %in% c("AB", "CK"),],
                linetype = "dashed",
                color = "black",
                linewidth = 0.5) +
    labs(#title = "Annual Water Temperature Over Time",
      x     = "Year",
      y     = "Mean annual SAV (%)",
      shape = "System"
      #fill  = NULL
    ) +
    #scale_color_brewer(palette = "PuOr") +
    #scale_color_viridis_d() +
    scale_shape_manual(values = c(0, 1, 15, 16)) +
    theme_bw() +
    facet_wrap(~season,
               nrow = 2,
               scales = "free_y",
    labeller = labeller(
        season = c(`summer` = "Summer", `winter` = "Winter")
    )) +
    theme(
      legend.position = "bottom"
    )) +
  theme(text = element_text(family = 'serif'))
```

## Assemblage Structure: Patterns and Dynamics {#sec-community-data}

### Abundance and Richness

```{r}
#| label: GLMM output prep
#| echo: FALSE
#| message: FALSE
#| include: FALSE

### abundance
abundFullS <- broom.mixed::tidy(glmmOutAbS, effects = "fixed") %>%
  select(term, estimate, std.error, p.value)
conditionS <- which(abundFullS$p.value < 0.05)

abundFullW <- broom.mixed::tidy(glmmOutAbW, effects = "fixed") %>%
  select(term, estimate, std.error, p.value)
conditionW <- which(abundFullW$p.value < 0.05)

abundContS <- emtrends(glmmOutAbS, ~ system, var = "smallYear", contr = "revpairwise")
abundMeanS <- emmeans(glmmOutAbS, spec = "system", contr = "revpairwise")

abundContW <- emtrends(glmmOutAbW, ~ system, var = "smallYear", contr = "revpairwise")
abundMeanW <- emmeans(glmmOutAbW, spec = "system", contr = "revpairwise")

### richness
richFullS <- broom.mixed::tidy(glmmOutRS, effects = "fixed") %>%
  select(term, estimate, std.error, p.value)
conditionRS <- which(richFullS$p.value < 0.05)

richFullW <- broom.mixed::tidy(glmmOutRW, effects = "fixed") %>%
  select(term, estimate, std.error, p.value)
conditionRW <- which(richFullW$p.value < 0.05)

richMeanS <- emmeans(glmmOutRS, spec = "system", contr = "revpairwise")
richMeanW <- emmeans(glmmOutRW, spec = "system", contr = "revpairwise")

richContS <- emtrends(glmmOutRS, ~ system, var = "smallYear", contr = "revpairwise")
richContW <- emtrends(glmmOutRW, ~ system, var = "smallYear", contr = "revpairwise")

abundOutTidy <- abundOut %>%
  select(!c("effect", "component")) %>%
  separate(systemSeason, into = c("System", "Season"), sep = "_") %>%
  mutate(Season = str_to_title(Season)) %>%
  arrange(Season) %>%
  mutate(System = factor(System, levels = c("AP", "CK", "TB", "CH")))

pValuesTemp <- abundOutTidy %>%
  select(System, Season, term, p.value) %>%
  filter(term == "temp_Z")

pValuesBvc <- abundOutTidy %>%
  select(System, Season, term, p.value) %>%
  filter(term == "bvc_Z")
```

Total abundance of fauna was generally higher (mean total abundance `r format(abundStats[1,]$meanAb, digits = 2)` Â±`r format(abundStats[1,]$seAb, digits = 2)`) for all systems in the summer season compared to winter (mean total abundance `r format(abundStats[2,]$meanAb, digits = 2)` Â±`r format(abundStats[2,]$seAb, digits = 2)`; [@fig-AbundPlot]). The initial abundance GLMMs for each season had a significant Year:System interaction term (*p* \<0.05 for both seasons), therefore, I separated the models into independent GLMMs for each system and season combination and dropped the interaction term from these final models. Within these independent GLMMs, total abundance decreased for Apalachicola Bay in winter (*p* = `r scales::pvalue(abundOutTidy[18,]$p.value)`; @tbl-abundModels), increased for Tampa Bay in summer (*p* = `r scales::pvalue(abundOutTidy[14,]$p.value)`; @tbl-abundModels), and remained stable for all other systems ([@tbl-abundModels]). Further, these GLMMs revealed summer abundances were not related to water temperature (*p* = `r scales::pvalue(min(pValuesTemp[pValuesTemp$Season=="Summer",]$p.value))` to `r scales::pvalue(max(pValuesTemp[pValuesTemp$Season=="Summer",]$p.value))`; @tbl-abundModels) and positively related to SAV coverage for all systems except Cedar Key (*p* = `r scales::pvalue(min(pValuesBvc[pValuesBvc$Season=="Summer",]$p.value))` to `r scales::pvalue(max(pValuesBvc[pValuesBvc$Season=="Summer",]$p.value))`; @tbl-abundModels). In contrast, winter total abundance was positively related to water temperature for all systems except Cedar Key (*p* = `r scales::pvalue(min(pValuesTemp[pValuesTemp$Season=="Winter",]$p.value))` to `r scales::pvalue(max(pValuesTemp[pValuesTemp$Season=="Winter",]$p.value))`; @tbl-abundModels). The relationship between SAV coverage and total abundance was more nuanced in the winter than during the summer. For Tampa Bay and Charlotte Harbor, total abundance was positively related to SAV coverage (*p* \<0.05 ; @tbl-abundModels). However, in Apalachicola Bay, total abundance was inversely related to SAV coverage (*p* = `r scales::pvalue(pValuesBvc[pValuesBvc$Season=="Summer"&pValuesBvc$System=="AP",]$p.value)`; @tbl-abundModels) while there was no significant correlation with SAV in Cedar Key (*p* \>0.05; @tbl-abundModels).

```{r}
#| label: fig-AbundPlot
#| echo: FALSE
#| message: FALSE
#| fig-width: 6.5
#| fig-height: 4
#| fig-cap: "Mean total faunal abundance (fourth-root transformed) per haul over time. Error bars represent Â± 1 standard error."

plot(AbundPlot_ann +
       facet_grid(season~system,
               labeller = labeller(
                 season = c(`summer` = "Summer", `winter` = "Winter"),
                 system = c(`AP` = "AB", `CK` = "CK", `TB` = "TB", `CH` = "CH")
               )) +
       scale_x_continuous(breaks=seq(2000,2020,10)) +
  theme(text = element_text(family = 'serif')))
```

```{r}
#| label: tbl-abundModels
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "Coefficients of terms in total faunal abundance GLMMs. Bold rows highlight terms where *p* <0.05."

abMeanOut <- abundOutTidy %>%
  mutate(System = fct_recode(System, "AB" = "AP")) %>%
  mutate(System = factor(System, levels = c("AB", "CK", "TB", "CH"))) %>%
  arrange(Season, System) %>%
  relocate(Season, .before = System) %>%
  filter(term != "(Intercept)") %>%
  mutate(term = ifelse(term == "smallYear", "Year", term)) %>%
  mutate(term = ifelse(term == "bvc_Z", "SAV_Z", term)) %>%
  mutate(term = ifelse(term == "temp_Z", "Temp_Z", term)) %>%
  #select(!c(lower.CL, upper.CL)) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  merge_v(j = ~ System) %>%
  colformat_double(j = c("estimate", "std.error", "p.value"), digits = 3) %>%
  colformat_double(j = c("statistic"), digits = 2) %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(term = "Term", 
    estimate = "Coefficient", 
    std.error = "Standard error",
    statistic = "t-statistic",
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(3:7)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")
  
abMeanOut
```

```{r}
#| label: richness GLMM output prep
#| echo: FALSE
#| message: FALSE
#| include: FALSE

richFullTidy <- richFullS %>%
  mutate(Season = "Summer", .before = term) %>%
  full_join(richFullW) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season))

richFullInteraction <- richFullTidy %>%
  filter(str_detect(term, ":"))

glmmOutRW_final <- glmmTMB(N ~ smallYear +
                       system +
                       bvc_Z +
                       temp_Z +
                       #(1|contYear) +
                       #(1|systemZone) +
                       offset(log(n_hauls)) +
                       ar1(yearMonth + 0|systemZone),
                     data = runnerW,
                     #dispformula = ~0,
                     #ziformula = ~1,
                     family = gaussian)
  
glmmOutRS_final <- glmmTMB(N ~ smallYear +
                         system +
                         bvc_Z +
                         temp_Z +
                         #(1|contYear) +
                         #(1|systemZone) +
                         offset(log(n_hauls)) +
                         ar1(yearMonth + 0|systemZone),
                       data = runnerS,
                       #dispformula = ~0,
                       #ziformula = ~1,
                       family = gaussian)

richFinalTidy <- broom.mixed::tidy(glmmOutRS_final, effects = "fixed") %>%
  mutate(Season = "Summer", .before = term) %>%
  full_join(broom.mixed::tidy(glmmOutRW_final, effects = "fixed")) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season)) %>%
  select(Season, term, estimate, std.error, statistic, p.value)
```

Mean total richness in winter (`r format(nStats[2,]$meanN, digits = 2)` Â±`r format(nStats[2,]$seN, digits = 2)`) was consistently lower for each system than in the summer (`r format(nStats[1,]$meanN, digits = 2)` Â±`r format(nStats[1,]$seN, digits = 2)`; [@fig-NPlot]). The initial richness GLMMs for each season had no significant Year:System interaction term in either model (*p* = `r scales::pvalue(min(richFullInteraction$p.value))` to `r scales::pvalue(max(richFullInteraction$p.value))`), therefore, I dropped this interaction term from the final models. The revised GLMMs revealed that total richness did not change during either summer or winter for any system (summer *p* = `r scales::pvalue(richFinalTidy[richFinalTidy$term=="smallYear"&richFinalTidy$Season=="Summer",]$p.value)` and winter *p* = `r scales::pvalue(richFinalTidy[richFinalTidy$term=="smallYear"&richFinalTidy$Season=="Winter",]$p.value)`; @tbl-richGLMMs). Further, total richness in summer was not related to water temperature (*p* = `r scales::pvalue(min(richFinalTidy[richFinalTidy$term=="temp_Z"&richFinalTidy$Season=="Summer",]$p.value))`; @tbl-richGLMMs) and was positively related to SAV coverage for all systems (*p* = `r scales::pvalue(min(richFinalTidy[richFinalTidy$term=="bvc_Z"&richFinalTidy$Season=="Summer",]$p.value))`; @tbl-richGLMMs). In contrast, total richness in winter was positively related to water temperature for all systems (*p* = `r scales::pvalue(min(richFinalTidy[richFinalTidy$term=="temp_Z"&richFinalTidy$Season=="Winter",]$p.value))`; @tbl-richGLMMs). However, total richness was positively related to SAV coverage for all systems during winter (*p* = `r scales::pvalue(min(richFinalTidy[richFinalTidy$term=="bvc_Z"&richFinalTidy$Season=="Summer",]$p.value))`; @tbl-richGLMMs).

```{r}
#| label: fig-NPlot
#| echo: FALSE
#| message: FALSE
#| fig-width: 6.5
#| fig-height: 4
#| fig-cap: "Mean total richness averaged annually. Error bars represent Â± 1 standard error."

# winterAbPred <- as.data.frame(predict(glmmOutRW)) %>%
#   mutate(season = "winter")
# summerAbPred <- as.data.frame(predict(glmmOutRS)) %>%
#   mutate(season = "summer")

plot(NPlot_ann +
       facet_grid(season~system,
               labeller = labeller(
                 season = c(`summer` = "Summer", `winter` = "Winter"),
                 system = c(`AP` = "AB", `CK` = "CK", `TB` = "TB", `CH` = "CH")
               )) +
       labs(y = "Mean total richness per haul") +
       scale_x_continuous(breaks=seq(2000,2020,10)) +
  theme(text = element_text(family = 'serif')))
```

```{r}
#| label: tbl-richGLMMs
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "Coefficients of terms in total faunal richness GLMMs. Bold rows highlight terms where *p* <0.05."

richMeanOut <- richFinalTidy %>%
  #mutate(Season = ifelse(is.na(Season), "Winter", Season)) %>%
  #filter(term != "(Intercept)") %>%
  mutate(term = ifelse(term == "smallYear", "Year", term)) %>%
  mutate(term = ifelse(term == "bvc_Z", "SAV_Z", term)) %>%
  mutate(term = ifelse(term == "temp_Z", "Temp_Z", term)) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("estimate", "std.error", "p.value"), digits = 3) %>%
  colformat_double(j = c("statistic"), digits = 2) %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(term = "Term", 
    estimate = "Coefficient", 
    std.error = "Standard error",
    statistic = "t-statistic",
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(2:6)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")
  
richMeanOut
```

### Beta Diversity

```{r}
#| label: BetaDiversity
#| include: FALSE
#| cache: TRUE
source("BetadiversityPairwise.R")

overallBeta <- betaTimeDF %>%
  filter(Index == "Overall")

#pairwise emmeans
betaWinterSummaryAll <- lsmeans(betaWinterLm, spec = "system", contr = "revpairwise")
betaSummerSummaryAll <- lsmeans(betaSummerLm, spec = "system", contr = "revpairwise")

betaWinterSumAll <- tidy(betaWinterSummaryAll$lsmeans)
betaSummerSumAll <- tidy(betaSummerSummaryAll$lsmeans)

#pairwise slope checks
betaWinterContrasts <- lstrends(betaWinterLm, ~ system, var = "smallYear", contr = "revpairwise")
betaSummerContrasts <- lstrends(betaSummerLm, ~ system, var = "smallYear", contr = "revpairwise")

betaWinterSlope <- tidy(betaWinterContrasts$lstrends)
betaSummerSlope <- tidy(betaSummerContrasts$lstrends)

betaWinterContSlope <- tidy(betaWinterContrasts$contrasts)
betaSummerContSlope <- tidy(betaSummerContrasts$contrasts)

betaWinterSummary <- tidy(summary.lm(betaWinterLm)) %>%
    mutate(Season = "Winter")
betaSummerSummary <- tidy(summary.lm(betaSummerLm)) %>%
    mutate(Season = "Summer")

betaWinterSummaryANC <- tidy(betaWinterLm) %>%
    mutate(Season = "Winter")
betaSummerSummaryANC <- tidy(betaSummerLm) %>%
    mutate(Season = "Summer")

betaWinterLmFinal <- aov(value ~ smallYear + system, data = betaWinter)
# nestWinterLm <- aov(value ~ smallYear * system, data = nestWinter)
# turnWinterLm <- aov(value ~ smallYear * system, data = turnWinter)
betaSummerLmFinal <- aov(value ~ smallYear + system, data = betaSummer)
# nestSummerLm <- aov(value ~ smallYear * system, data = nestSummer)
# turnSummerLm <- aov(value ~ smallYear * system, data = turnSummer)

betaWinterSummaryANC_final <- tidy(summary.lm(betaWinterLmFinal)) %>%
    mutate(Season = "Winter")
betaSummerSummaryANC_final <- tidy(summary.lm(betaSummerLmFinal)) %>%
    mutate(Season = "Summer")
```

```{r}
#| label: tbl-betaCVs
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "CVs for beta."

stufffff <- overallBeta %>%
  mutate(check = ifelse(as.numeric(seasonYear) > 2010, 1, 0)) %>%
  group_by(system, season, check) %>%
  mutate(ltm = mean(value),
         dev = sd(value),
         cv  = (dev/ltm)*100) %>%
  distinct(system, season, check, cv) %>%
  flextable(.)
```

Bray-Curtis dissimilarity of species composition increased consistently across all systems within each season (Year:System interaction term for summer *p* = `r scales::pvalue(as.data.frame(betaSummerSummaryANC$p.value)[3,])` and winter *p* = `r scales::pvalue(as.data.frame(betaWinterSummaryANC$p.value)[3,])`). The rate of increase in dissimilarity during winter was `r format(as.data.frame(betaWinterSummaryANC_final$estimate)[2,], digits = 1)`yr^-1^ Â± `r format(betaWinterSummaryANC_final[2,]$std.error, digits = 1)` which was 2.5 times that during summer (`r format(as.data.frame(betaSummerSummaryANC_final$estimate)[2,], digits = 1)`yr^-1^ Â± `r format(betaSummerSummaryANC_final[2,]$std.error, digits = 1)`; @tbl-betaTrends; @fig-betadiversity). In addition, during winter, particularly in the northern systems (Apalachicola Bay and Cedar Key), there appears to be higher variability in the years after 2010 ([@fig-betadiversity]). Within dissimilarity overall, there were clear variations in the underlying components of beta diversity (turnover and nestedness), though they are not modeled here.

```{r}
#| label: tbl-betaTrends
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "ANCOVA model outputs for betadiversity indices over time. Bold values are statistically significant at alpha 0.05."

betaTrendOut <- as.data.frame(betaSummerSummaryANC_final) %>%
  full_join(as.data.frame(betaWinterSummaryANC_final)) %>%
  relocate(Season, .before = term) %>%
  mutate(term = ifelse(term == "smallYear", "Year", term)) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c(3,4,6), digits = 3) %>%
  colformat_double(j = c(5), digits = 2) %>%
  # set_header_labels(system = "System", 
  #   smallYear.trend = "Estimated trend", 
  #   SE = "Standard error") %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(term = "Term", 
    estimate = "Estimate", 
    std.error = "Standard error",
    statistic = "t-statistic",
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(2:6)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")
  
betaTrendOut
```

```{r}
#| label: fig-betadiversity
#| echo: FALSE
#| message: FALSE
#| fig-width: 6.5
#| fig-height: 5
#| fig-cap: "Partitioned beta diversity calculated pairwise with respect to the first year of available data. Trend lines calculated using seasonal ANCOVA models."

winterBetaPred <- predict(betaWinterLmFinal)
summerBetaPred <- predict(betaSummerLmFinal)

betaTimeDF <- betaTimeDF %>%
  mutate(Index = factor(Index))

levels(betaTimeDF$Index)[levels(betaTimeDF$Index)=="Balanced"] <- "Turnover"
levels(betaTimeDF$Index)[levels(betaTimeDF$Index)=="Gradient"] <- "Nestedness"

(betaTimePlot <- ggplot(aes(x = contYear,
                            y = value,
                            color = Index),
                        data = betaTimeDF) +
  geom_line(
    linewidth = 0.7) +
  facet_grid(season~system,
               labeller = labeller(
                 system = c(`AP` = "AB", `CK` = "CK", `TB` = "TB", `CH` = "CH")
               )) +
  # scale_x_continuous(breaks= seq(1998,2020,5)) +
  # scale_color_cmocean(discrete = TRUE,
  #                     name = "solar") +
  # scale_color_viridis_d(option = "viridis") +
    # geom_smooth(method = "lm",
    #             formula = y ~ x,
    #             se = FALSE,
    #             data = overallBeta[overallBeta$season %in% c("Summer"),],
    #             linetype = "dashed") +
    #    geom_smooth(method = "lm",
    #             formula = y ~ x,
    #             se = FALSE,
    #             data = overallBeta[overallBeta$season %in% c("Winter"),],
    #             linetype = "solid") +
    geom_line(data = overallBeta[overallBeta$season %in% c("Winter"),],
              aes(y=winterBetaPred)) +
    geom_line(data = overallBeta[overallBeta$season %in% c("Summer"),],
              aes(y=summerBetaPred)) +
  scale_color_brewer(palette = "Set1") +
  labs(#title = "Abundance-based dissimilarity over time",
       x = "Year",
       y = "Beta diversity index") +
  theme_bw() +
  theme(legend.position="bottom",
        axis.text.x = element_text(size = 7))) +
       scale_x_continuous(breaks=seq(2000,2020,10)) +
  theme(text = element_text(family = 'serif'))
```

```{r}
#| label: RDA
#| include: FALSE
#load("./Outputs/RDAsforAll_Z.RData")
load("./Outputs/RDAsforAll_Y.RData")
load('SXS_filtered.Rdata')
#RDAsforAll <- RDAsforAll_Z

systemSeason_list <- SXS_filtered %>%
  select(systemSeason) %>%
  distinct()

plotOrder <- data.frame(systemSeason = c("AP_summer", "AP_winter",
              "CK_summer", "CK_winter",
              "TB_summer", "TB_winter",
              "CH_summer", "CH_winter"))

# perms <- list()
# stageZero <- list()
# for(i in systemSeason_list$systemSeason){
#   print(i)
#   perms[[i]] <- permutest(x = RDAsforAll[[i]]$rda, permutations = 999, parallel = 4)
#   #stageZero[[i]] <- tidy(perms[[i]])
# }

RDAaxesVar <- list()
plotsforAll <- list()
#rdaVecslist <- list()
for(i in plotOrder$systemSeason){
 print(i)
  mult <- 1
  mult_vec <- 1
  scores_sites <- data.frame(RDAsforAll[[i]]$scores$sites)
  vecs <- data.frame(RDAsforAll[[i]]$env$vectors$arrows)
  row.names(vecs) <- c("SAV", "Water temp")
  #rdaVecslist[[i]] <- vecs
  middles <- data.frame(RDAsforAll[[i]]$scores$centroids)
  plotSub <- SXS_filtered %>% #filter out systemSeason of interest just as in rda loop (df_env)
    filter(systemSeason %in% i) %>%
    select(seasonYear) %>%
    cbind(scores_sites) %>%
    group_by(seasonYear) %>%
    summarise(across(everything(), ~ mean(.x, na.rm = TRUE)))
  # grps <- data.frame(rownames(middles) %>%
  #   str_remove_all("seasonYear")) %>%
  #   rename(seasonYear = rownames.middles......str_remove_all..seasonYear..)
  
  plotsforAll[[i]] <- ggplot(plotSub) +
    geom_vline(xintercept = 0,
               colour     = "grey70",
               size       = 1) +
    geom_hline(yintercept = 0,
               colour     = "grey70",
               size       = 1) +
    scale_x_continuous(limits       = symmetric_range,
                       breaks       = c(-6,-1,0,1,6),
                       minor_breaks = NULL) +
    scale_y_continuous(limits       = symmetric_range,
                       breaks       = c(-6,-3,0,3,6),
                       minor_breaks = NULL) +
    labs(title = paste0(i, " ", round((RsquareAdj(RDAsforAll[[i]]$rda)$adj.r.squared*100), 2), "%"), 
         x     = paste("CA1 (", round(100*RDAsforAll[[i]]$rda$CCA$eig[1]/RDAsforAll[[i]]$rda$tot.chi,2), "%)", sep = ""),
         y     = paste("CA1 (", round(100*RDAsforAll[[i]]$rda$CCA$eig[2]/RDAsforAll[[i]]$rda$tot.chi,2), "%)", sep = ""))+
    scale_color_manual(values = c("blue","darkgreen"),
                       guide  = guide_none()) +
    # geom_point(data = scores_sites,
    #            aes(x = mult*dbRDA1,
    #                y = mult*dbRDA2,
    #            ),
    #            size   = 1,
    #            stroke = 0.1,
    #            pch    = 21,
    #            colour = "black") +
    geom_point(aes(x = mult*dbRDA1,
                   y = mult*dbRDA2,
                   fill = seasonYear),
               size   = 4,
               stroke = 0.1,
               pch    = 21,
               colour = "black") +
    # scale_fill_gradient(
    #   low = "blue",
    #   high = "red",
    #   space = "Lab",
    #   na.value = "grey50",
    #   guide = "colourbar",
    #   aesthetics = "fill"
    # ) +
        scale_fill_viridis(option = "magma", 
                       limits = sort(levels(SXS_filtered$seasonYear)),
                       breaks = c("2000", "2005", "2010", "2015", "2020"),
                       discrete=TRUE) +
    theme_bw() +
    theme(legend.text       = element_text(size=rel(0.8)),
          legend.position   = c(0.055,0.89),
          legend.background = element_blank(),
          legend.key        = element_blank(),
          panel.grid        = element_blank(),
          plot.title        = element_text(size = rel(0.8)),
          axis.title        = element_text(size = rel(0.8))) +
    geom_segment(data = vecs,
                 aes(x     = 0, 
                     xend  = mult_vec*dbRDA1, 
                     y     = 0, 
                     yend  = mult_vec*dbRDA2, 
                     #color = "blue"
                       ),
                 arrow = arrow(length = unit(.1,"inches")),
                 size  = 1,
                 alpha = 0.6) +
    geom_label_repel(data = vecs,
                     aes(x      = mult_vec*dbRDA1,
                         y      = mult_vec*dbRDA2,
                         label  = rownames(vecs),
                         #colour = "blue",
                         #size   = "blue"
                           ),
                     size          = 2.5,
                     force         = 0.1,
                     family = 'serif',
                     alpha         = 0.8,
                     fontface      = "bold",
                     label.padding = 0.25,
                     box.padding   = 0.1,
                     fill          ="white",
                     label.r       = 0.25,
                     label.size    = 0.25,
                     segment.alpha =0,
                     nudge_x       = ifelse(vecs$dbRDA1>0,0.1,-0.1),
                     nudge_y       = ifelse(vecs$dbRDA2>0,0.2,-0.2)) +
    scale_size_manual(values = c(2.5,3.5),
                      guide  = guide_none()) +
    guides(fill = guide_legend(override.aes = list(size = 2.5),
                               keyheight    = 0.15,
                               keywidth     = 0.2,
                               title = "Year")) +
  theme(text = element_text(family = 'serif'))
  
  if(i == "AP_summer"){
    plotsforAll[[i]] <- plotsforAll[[i]] + labs(title = paste0("AB_summer", " ", round((RsquareAdj(RDAsforAll[[i]]$rda)$adj.r.squared*100), 2), "%"))
  } else if(i == "AP_winter"){
    plotsforAll[[i]] <- plotsforAll[[i]] + labs(title = paste0("AB_winter", " ", round((RsquareAdj(RDAsforAll[[i]]$rda)$adj.r.squared*100), 2), "%"))
  }
  
  RDAaxesVar[[i]]$CA1 <- round(100*RDAsforAll[[i]]$rda$CCA$eig[1]/RDAsforAll[[i]]$rda$tot.chi,2)
  RDAaxesVar[[i]]$CA2 <- round(100*RDAsforAll[[i]]$rda$CCA$eig[2]/RDAsforAll[[i]]$rda$tot.chi,2)
  RDAaxesVar[[i]]$fullModel <- round((RsquareAdj(RDAsforAll[[i]]$rda)$adj.r.squared*100), 2)
}

fullRDAPlot <- wrap_plots(plotsforAll,
                      ncol = 2, guides = "collect") & theme(legend.position = 'bottom')

RDAaxes <- bind_rows(RDAaxesVar, .id = "systemSeason")
```

```{r}
#| label: PERMANOVA
#| include: FALSE
load("bigPERMANOVAs_yxs.RData")

summerdf <- tidy(summerfAbundPERM) %>%
  mutate(Season = "Summer")

winterdf <- tidy(winterfAbundPERM) %>%
  mutate(Season = "Winter")
```

PERMANOVAs indicated assemblage composition and abundance varied differently over time among systems due to a significant interactive effect between year and system (Year:System interaction term for summer *p* = `r scales::pvalue(summerdf$p.value[3])` and winter *p* = `r scales::pvalue(winterdf$p.value[3])`; [@tbl-fullPERMANOVA]). Therefore, separate CAP ordinations were conducted for each system within each season [@tbl-allPERMANOVAs; *sensu* @Peake2022].

```{r}
#| label: tbl-fullPERMANOVA
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "Summary outputs from assemblage composition and abundance PERMANOVAs conducted for each season. Values in bold are statistically significant at alpha 0.05."

perms <- summerdf %>%
  full_join(winterdf) %>%
  relocate(Season, .before = df) %>%
  relocate(term, .before = df) %>%
  mutate(term = ifelse(term == "contYear:system", "Year:System", term)) %>%
  mutate(term = ifelse(term == "seasonYear:system", "Year:System", term)) %>%
  mutate(term = ifelse(term == "system", "System", term)) %>%
  mutate(term = ifelse(term == "contYear", "Year", term)) %>%
  mutate(term = ifelse(term == "seasonYear", "Year", term)) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  labelizor(part = "header", 
  labels = stringr::str_to_title) %>%
  colformat_double(j = c(4:7), digits = 3) %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(#Df = "df", 
    SumOfSqs = "Sum of squares", 
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(2:7)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")

perms

```

```{r}
#| label: allPERMANOVAprep
#| echo: FALSE
#| message: FALSE
load("./Outputs/PERMSforALLDF_factor.RData")

```

```{r}
#| label: tbl-allPERMANOVAs
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "All of the PERMANVOAs"

all_perms <- PERMSforAllDF %>%
  mutate(term = rownames(.)) %>%
  mutate(season = stringr::str_to_title(season)) %>%
  mutate(term = str_replace(term, "\\.{3}.*$", "")) %>%
  rename(p.value = "Pr(>F)") %>%
  relocate(season, .before = system) %>%
  relocate(term, .before = Df) %>%
  mutate(system = factor(system, levels = c("AP", "CK", "TB", "CH"))) %>%
  arrange(season, system) %>%
  mutate(system = fct_recode(system, "AB" = "AP")) %>%
  mutate(term = ifelse(term == "contYear:system", "Year:System", term)) %>%
  mutate(term = ifelse(term == "seasonYear:system", "Year:System", term)) %>%
  mutate(term = ifelse(term == "system", "System", term)) %>%
  mutate(term = ifelse(term == "contYear", "Year", term)) %>%
  mutate(term = ifelse(term == "seasonYear", "Year", term)) %>%
  flextable(.) %>%
  merge_v(j = ~ season) %>%
  merge_v(j = ~ system) %>%
  labelizor(part = "header", 
  labels = stringr::str_to_title) %>%
  colformat_double(j = c(5:7), digits = 2) %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(#Df = "df", 
    SumOfSqs = "Sum of squares", 
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(3:8)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")

all_perms

```

```{r}
#| label: CAP_processing
#| include: FALSE
load("./Outputs/CAPsforAll_Z_infm.RData")

#source https://github.com/jonpeake/forage-fish-public-code/blob/main/ForageFigures_CODE.R
cap_pctvars <- function(cap_out){
  # A function that takes the output of the CAPdiscrim function and 
  # produces the percent of among-group variability explained by each
  # canonical axis.
  #
  # Inputs: 
  # cap_out = 'CAPDiscrim' function list output
  # 
  # Output: 
  # pct_var = A numerical array with dimensions 1 x p, where p is the
  #           number of canonical axes, corresponding to the percent
  #           of among-group variability explained by each axis.
  #         
  
  # Extract eigenvalues from manova sublist
  eig     <- cap_out[["manova"]][["Eigenvalues"]]
  
  # Convert eigenvalues to analog of canonical variability
  vars    <- eig*cap_out$tot*(cap_out$varm/100)/(eig+1)
  
  # Calculate percent of variability explained by each axis
  pct_var <- t(100*vars/sum(vars))
  
  # Trim rows not corresponding to canonical axes
  pct_var <- pct_var[1:ncol(cap_out$x),]
  return(pct_var)
}

load('TidyGearCode20.Rdata')
load('SXS_filtered.Rdata')

#data setup
#build month dataframe
monthly <- HydroList %>%
  select(Reference, month)

#rejoin with environmental data
SXS_run_env <- SXS_filtered_env %>%
  #left_join(SXS_filtered_env) %>%
  left_join(monthly) %>%
  group_by(systemSeason) %>%
  add_count(name = "n_hauls") %>% #count number of hauls per systemSeason
  ungroup() %>%
  group_by(systemSeason, seasonYear) %>%
  mutate(avg_temp = mean(Temperature, na.rm = TRUE),
         n_temp = n(),
         upper = quantile(Temperature, 0.9),
         lower = quantile(Temperature, 0.1),
         sd_ann = sd(Temperature)) %>%
  ungroup() %>%
  group_by(systemSeason) %>%
  mutate(avg_ltm = mean(avg_temp),
         sd_ltm = sd(avg_temp, na.rm = TRUE),
         upper_sd = sd(upper),
         lower_sd = sd(lower)) %>%
  mutate(anom_temp = avg_temp - avg_ltm,
         se_temp = sd_ltm/sqrt(n_temp),
         lower.ci.anom.temp = 0 - (1.96 * se_temp),
         upper.ci.anom.temp = 0 + (1.96 * se_temp)) %>%
  #zscoreing
  mutate(bvc_ltm  = mean(BottomVegCover, na.rm = TRUE),
         bvc_sd   = sd(BottomVegCover, na.rm = TRUE),
         temp_ltm = mean(Temperature, na.rm = TRUE),
         temp_sd  = sd(Temperature, na.rm = TRUE),
         year_ltm = mean(as.numeric(as.character(seasonYear)), na.rm = TRUE),
         year_sd  = sd(as.numeric(as.character(seasonYear)), na.rm = TRUE),
         bvc_Z    = ((BottomVegCover - bvc_ltm)/bvc_sd),
         temp_Z   = ((Temperature - temp_ltm)/temp_sd),
         year_Z    = ((as.numeric(as.character(seasonYear)) - year_ltm)/year_sd),
         sd_t_Z   = sd(temp_Z)) %>%
  #monthly
  ungroup() %>%
  group_by(systemSeason, seasonYear, month) %>%
  mutate(avg_temp_mon = mean(Temperature, na.rm = TRUE),
         n_temp_mon = n(),
         upper_mon = quantile(Temperature, 0.9),
         lower_mon = quantile(Temperature, 0.1),
         upper_Z  = quantile(temp_Z, 0.9),
         lower_Z  = quantile(temp_Z, 0.1),
         sd_mon = sd(Temperature),
         se_mon = sd_mon/sqrt(n_temp_mon))

systemSeason_list <- SXS_filtered %>%
  select(systemSeason) %>%
  distinct()

CAPOrder <- data.frame(systemSeason = c("AP_summer", "AP_winter",
              "CK_summer", "CK_winter",
              "TB_summer", "TB_winter",
              "CH_summer", "CH_winter"))

### centroids ####
for(i in CAPOrder$systemSeason){
  df <- SXS_filtered %>% #filter out systemSeason of interest
    filter(systemSeason %in% i)
  
  df_spe_filtered <- SXS_filtered %>%
    filter(Reference %in% df$Reference) %>%
    subset(select = -c(systemSeason, seasonYear, Reference, systemZone, BottomVegCover, Temperature)) %>%
    select(which(!colSums(., na.rm=TRUE) %in% 0)) #select only taxa present in this systemSeason
  
  df_env <- data.frame(SXS_run_env %>% #pull out environmental variables
                         filter(Reference %in% df$Reference) %>%
                         subset(select = c(systemSeason, seasonYear, bvc_Z, temp_Z)) %>%
                         mutate(contYear = as.numeric(as.character(seasonYear))))

CAPsforAll[[i]]$centroids <- centroids.long(sites.long(ordiplot(CAPsforAll[[i]])),
                                            df_env$seasonYear,
                                            centroids.only = TRUE)
}

##### centroids with sppvec plots #######
#need fixed range of sppvecs first
sppvecs_list <- list()
sppvecs_list_fix <- list()
for(i in CAPOrder$systemSeason){
spp_vecs <- data.frame(CAPsforAll[[i]]$cproj) %>%
  #arrange(desc(abs(LD1))) %>%
  mutate(mag = sqrt(LD1^2 + LD2^2)) %>%
  arrange(desc(abs(mag))) %>%
  mutate(Scientificname = rownames(.)) %>%
  #select(system, season, Scientificname, mag)
  slice_head(n = 10)
sppvecs_list_fix[[i]] <- spp_vecs
}
sppvecs_list_fixdf <- bind_rows(sppvecs_list_fix, .id = "systemSeason")

#spp_vecs_label <- list()
#centroidPlots <- list()
mainframe <- list()
for(i in CAPOrder$systemSeason){
  print(i) #watch progress through list
  
  centers <- data.frame(CAPsforAll[[i]]$centroids)
  
  taxa <- sppvecs_list_fixdf %>%
    filter(systemSeason == i) %>%
    mutate(mag = sqrt(LD1^2 + LD2^2)) %>%
    arrange(desc(abs(mag))) %>%
    #select(system, season, Scientificname, mag)
    slice_head(n = 3)
  
  interim <- data.frame(LD1var = round(cap_pctvars(CAPsforAll[[i]]), 2)[1],
                        LD2var = round(cap_pctvars(CAPsforAll[[i]]), 2)[2],
                        allVar = round(CAPsforAll[[i]]$percent, 2),
                        axis1c = centers$axis1c,
                        axis2c = centers$axis2c,
                        df_env.seasonYear = centers$df_env.seasonYear,
                        topTaxLD1 = taxa[1,2],
                        topTaxLD2 = taxa[1,3],
                        topTaxNam = taxa$Scientificname[1],
                        twoTaxLD1 = taxa[2,2],
                        twoTaxLD2 = taxa[2,3],
                        twoTaxNam = taxa$Scientificname[2],
                        thrTaxLD1 = taxa[1,2],
                        thrTaxLD2 = taxa[1,3],
                        thrTaxNam = taxa$Scientificname[3])
  
  mainframe[[i]] <- interim
}

centroidDf <- bind_rows(mainframe, .id = "systemSeason")

stageOne <- sppvecs_list_fixdf %>%
  select(systemSeason, Scientificname, LD1, LD2) %>%
  ungroup() %>%
  group_by(systemSeason) %>%
  slice_head(n = 3)

mult <- 2.7

centroidPlots <- list()
for(i in CAPOrder$systemSeason){
  indf <- centroidDf %>%
    filter(systemSeason == i)
  
  taxdf <- stageOne %>%
    filter(systemSeason == i)
  
  centroidPlots[[i]] <- ggplot(indf) +
        geom_vline(xintercept = 0,
               colour     = "grey70",
               size       = .25) +
    geom_hline(yintercept = 0,
               colour     = "grey70",
               size       = .25) +
    scale_x_continuous(limits       = symmetric_range(1+(mult)*sppvecs_list_fixdf$LD1),
                       breaks       = c(-4,-2,0,2,4),
                       minor_breaks = NULL) +
    scale_y_continuous(limits       = symmetric_range(1+(mult)*sppvecs_list_fixdf$LD2),
                       breaks       = c(-4,-2,0,2,4),
                       minor_breaks = NULL) +
    geom_point(aes(x    = axis1c, 
                   y    = axis2c, 
                   fill = df_env.seasonYear),
               size   = 4, 
               stroke = 0.1,
               pch    = 21, 
               colour = "black") +
    labs(title = paste0(i, " ", round(indf$allVar[1], 2), "%"),
         x     = paste("CA1 (",indf$LD1var[1],"%)",sep=""),
         y     = paste("CA2 (",indf$LD2var[1],"%)",sep=""),
         fill  = NULL) +
    # scale_fill_gradient(
    #   low = "blue",
    #   high = "red",
    #   space = "Lab",
    #   na.value = "grey50",
    #   guide = "colourbar",
    #   aesthetics = "fill"
    # ) +
    scale_fill_viridis(option = "magma", 
                       limits = sort(levels(centroidDf$df_env.seasonYear)),
                       breaks = c("2000", "2005", "2010", "2015", "2020"),
                       discrete=TRUE) +
    theme_bw() +
    theme(legend.text       = element_text(size=rel(0.5)),
          legend.position   = c(0.055,0.89),
          legend.background = element_blank(),
          legend.key        = element_blank(),
          panel.grid        = element_blank(),
          plot.title        = element_text(size = rel(0.8)),
          axis.title        = element_text(size = rel(0.8))) +
    geom_segment(data = taxdf,
                 aes(x    = 0,
                     xend = mult*LD1,
                     y    = 0,
                     yend = mult*LD2),
                 arrow = arrow(length = unit(0.1,"inches")),
                 color = "grey1",
                 size  = .75,
                 alpha = 0.6) +
  geom_label_repel(data = taxdf,
                   aes(x     = mult*LD1 + 0.2*cos(atan(LD2/LD1))*sign(LD1),
                       y     = mult*LD2 + 0.2*sin(atan(LD2/LD1))*sign(LD2),
                       label = Scientificname),
                   segment.alpha = 0,
                   size          = 2,
                   color         = "black",
                   family = 'serif',
                   fontface      = "bold.italic",
                   fill          = "white",
                   alpha         = 0.7,
                   box.padding   = .25,
                   lineheight    = 0.4,
                   label.size    = 0.25,
                   #nudge_x       = ifelse(spp_vecs_label[[i]]$LD1>0,0.05,-0.05),
                   #nudge_y       = ifelse(spp_vecs_label[[i]]$LD2>-0.02,0.05,-0.05),
                   force         = 0.3) +
    scale_size_manual(values = c(2.5,3.5),
                      guide  = guide_none()) +
    guides(fill = guide_legend(override.aes = list(size = 2.5),
                               keyheight    = 0.15,
                               keywidth     = 0.2,
                               title = "Year")) +
  theme(text = element_text(family = 'serif'))
  
  if(i == "AP_summer"){
    centroidPlots[[i]] <- centroidPlots[[i]] + labs(title = paste0("AB_summer", " ", round(indf$allVar[1], 2), "%"))
  } else if(i == "AP_winter"){
    centroidPlots[[i]] <- centroidPlots[[i]] + labs(title = paste0("AB_winter", " ", round(indf$allVar[1], 2), "%"))
  }
    
}
    
    centroidCAP <- wrap_plots(centroidPlots,
           ncol = 2, guides = "collect")& theme(legend.position = 'bottom')
    
# table assembly
spp_vec_setup <- list()
for(i in CAPOrder$systemSeason){
xf <- data.frame(CAPsforAll[[i]]$cproj) %>%
  arrange(desc(abs(LD1))) %>%
  slice_head(n = 5) %>%
  mutate(Scientificname = row.names(.)) %>%
  pivot_longer(cols = starts_with("LD"), names_to = "axisVar") %>%
  filter(axisVar %in% c("LD1", "LD2")) %>%
  mutate(systemSeason = i) %>%
  mutate(percent = CAPsforAll[[i]]$percent) %>%
  separate(systemSeason,
           c("system","season"),
           sep = "_")

spp_vec_setup[[i]] <- xf
}
topSpp <- bind_rows(spp_vec_setup)

sysSpp <- topSpp %>%
  group_by(system, season) %>%
  filter(axisVar %in% c("LD1","LD2")) %>%
  pivot_wider(names_from = axisVar) %>%
  mutate(mag = sqrt(LD1^2 + LD2^2)) %>%
  filter(mag == max(mag)) %>%
  select(system, season, Scientificname, mag)

confuseM <- list()
for(i in CAPOrder$systemSeason){
  group <- data.frame()
     CV <- data.frame()
     
     group <- CAPsforAll[[i]]$group
     CV <- CAPsforAll[[i]]$CV
     
 confuseM[[i]]  <- caret::confusionMatrix(data = CV, reference = group)
}

```

CAP ordinations revealed that in most systems and seasons, there was a steady progression from the earlier years of assemblage composition and abundance to the more recent years. This is evidenced by the small movement of the centroids of each year in a single general direction ([@fig-centroidCAP]). However, notable exceptions include Cedar Key in the summer, which appeared to have a distinct separation of two groups of years (pre- and post-2010) and Charlotte Harbor, which, for both seasons, has considerably more overlap among earlier and recent year centroids ([@fig-centroidCAP]). In terms of individual taxa identified by the CAPs, in winter, *Leiostomous xanthurus* was consistently identified as the taxa most associated with yearly assemblage differences and was mostly pointed toward the centroids of earlier year groups in the dataset ([@tbl-CAPtaxa]; [@fig-centroidCAP]). This same phenomenon was observed in the summer data for both Tampa Bay and Apalachicola Bay. For the apparent separation in Cedar Key summer, the taxa most aligned with these opposing groups are shrimps in the genus *Farfantepenaeus* ([@fig-centroidCAP]). Overall, the range of variability described by the CAP models was `r paste0(round(min(topSpp$percent),2), "%")` to `r paste0(round(max(topSpp$percent),2), "%")`, indicating a large portion of the variability was not explained by the assemblage composition and abundances alone. Looking at the assemblage most associated with yearly differences, only five different taxa were selected as the top associated with yearly separation on the first two canonical axes for all system and season combinations ([@tbl-CAPtaxa]). Specifically, each system in summer has a different taxon associated with the greatest yearly separation, but in the winter, all systems are best separated on a yearly basis by *L. xanthurus* ([@tbl-CAPtaxa]).

```{r}
#| label: tbl-CAPtaxa
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "Taxon with the greatest magnitude vector as measured on the first two axes of variation for each system and season."

sysSppPrep <- sysSpp %>%
  mutate(season = stringr::str_to_title(season)) %>%
  group_by(season) %>%
  mutate(system = factor(system, levels = c("AP", "CK", "TB", "CH"))) %>%
  mutate(system = fct_recode(system, "AB" = "AP")) %>%
  arrange(system, .by_group = TRUE) %>%
  relocate(season, .before = system) %>%
  select(!c(mag))

sysSppFT <- flextable(sysSppPrep) %>%
  merge_v(j = ~ season) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  italic(j = 3) %>%
  set_header_labels(season = "Season",
    system = "System",
    Scientificname = "Scientific name",
    mag = "Magnitude") %>%
  #colformat_double(j = 4, digits = 3) %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")

sysSppFT

```

```{r}
#| label: fig-centroidCAP
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| fig-width: 6.5
#| fig-height: 7.25
#| fig-cap: "Canonical analysis of principal coordinates ordinations of assemblage composition and abundance. Shading of markers indicates year for that group, with darker colors indicating centroids of the oldest years in the data and lighter colors indicating the most recent years. Percentages next to subplot title indicate total variability captured by the model. Top three taxa associated with canonical axes scores plotted as vectors. Canonical axis (CA) percentages indicate the among-group variation captured in each axis."

plot(centroidCAP)
```

In terms of abiotic effects on assemblage composition and abundance, dbRDA highlighted the significance of SAV and water temperature in describing the variation in beta diversity across all systems and seasons when compared to a null model ([@fig-RDAforAll]). However, no clear patterns of separation among years were apparent in most of the ordinations ([@fig-RDAforAll]). Across systems, Tampa Bay appears to have the most tightly clustered group of yearly centroids compared to all other systems ([@fig-RDAforAll]). The range of variation explained by the models was `r min(RDAaxes$fullModel)`% to `r max(RDAaxes$fullModel)`%. The range of variation explained by the first canonical axis of each model was `r min(RDAaxes$CA1)`% to `r max(RDAaxes$CA1)`% within the overall model variation, with the range of the second canonical axis covering `r min(RDAaxes$CA2)`% to `r max(RDAaxes$CA2)`%.

```{r}
#| label: fig-RDAforAll
#| echo: FALSE
#| message: FALSE
#| fig-width: 6.5
#| fig-height: 7.25
#| fig-cap: "Distance-based redundancy analysis (dbRDA) ordination to visualize effects of habitat parameters. Shading of markers indicates year for that group, with darker colors indicating centroids of the oldest years in the data and lighter colors indicating the most recent years. Canonical axis (CA) percentages indicate the total variation in estuarine communities explained by that axis. Each habitat variable is represented by vectors and centroids of taxa groups are calculated using weighted average scores."

plot(fullRDAPlot)
```

### Individual Taxon Analyses {#sec-univariate-analyses}

```{r}
#| label: individualTaxonPrep
#| include: FALSE

sigSummaryPercent <- sigSummary %>%
  select(system, season, count, sig_percent, sigCount, posCount, negCount) %>%
  rename(sigPercent = sig_percent) %>%
  mutate(posPercent = posCount/sigCount) %>%
  mutate(negPercent = negCount/sigCount) %>%
  select(system, season, sigPercent, posPercent, negPercent)

ssGrouped <- sigSlopes_grouped %>%
  separate(systemSeason, into = c("system", "season"), remove = FALSE) %>%
  mutate(season = stringr::str_to_title(season)) %>%
  mutate(system = factor(system, levels = c("AP", "CK", "TB", "CH"))) %>%
  mutate(system = fct_recode(system, "AB" = "AP")) %>%
  mutate(Scientificname = factor(Scientificname)) %>%
  mutate(Scientificnumber = as.numeric(Scientificname)) %>%
  unite(col = seaSys, system, season, sep = " ", remove = FALSE)
```

```{r}
#| label: fig-winnersLosers
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| fig-width: 6.5
#| fig-height: 5
#| fig-cap: "Density plots of slopes of all mean annual taxa abundances over time. Dashed line indicates a slope of 0. Includes slopes of no statistical significance."

levels(SlopesForAllDF$system)[levels(SlopesForAllDF$system)=="AP"] <- "AB"

winLose <- ggplot(SlopesForAllDF, 
       aes(x = slope))+
  geom_histogram(binwidth = .01) +
  geom_density(adjust = 10, 
               fill="#69b3a2", color="#e9ecef", alpha=0.7) +
  #scale_x_continuous(trans=scales::pseudo_log_trans(base = 10)) +
  scale_y_continuous(trans = "sqrt") + 
  #geom_vline(aes(xintercept = mean), test, linetype="dashed", colour = "blue")+
  geom_vline(xintercept = 0, linetype="dashed") +
  #geom_vline(aes(xintercept = mean+siq), test, colour = "red")+
  #geom_vline(aes(xintercept = mean-siq), test, colour = "red")+
  facet_grid(season~system,
             scales = "free_y",
    labeller = labeller(
        season = c(`summer` = "Summer", `winter` = "Winter")
    )) +
  coord_cartesian(xlim = c(-0.05, 0.05)) +
  xlab("Coefficients of change") +
  ylab("Number of taxa") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, vjust = 0.8, size = 7)) +
  theme(text = element_text(family = 'serif'))

winLose
```

The majority of taxa did not exhibit significant changes in abundance over time (208 out of 299 taxa), with a large group centered around zero rate of abundance change in both summer and winter for all systems ([@fig-winnersLosers]). There was no difference in total percentage of taxa changing between systems (*t* = `r format(sigSigSys_tidy[1,]$statistic, digits = 3, nsmall = 2)`; *p* = `r scales::pvalue(sigSigSys_tidy[1,]$p.value)`) or seasons (*t* = `r format(sigSig$statistic, digits = 3, nsmall =2)`, *p* = `r scales::pvalue(sigSig$p.value)`). However, the percentage of taxa changing negatively was greater in the summer than in the winter (*t* = `r format(negSig$statistic, digits = 3)`, *p* = `r scales::pvalue(negSig$p.value)`; [@tbl-sigTaxa]).

```{r}
#| label: tbl-sigTaxa
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| tbl-cap: "Percent of observed taxa with statistically significant changes in abundance over time as well as the split between positive and negative change within."
sigSumPrep <- sigSummaryPercent %>%
  group_by(season) %>%
  mutate(system = factor(system, levels = c("AP", "CK", "TB", "CH"))) %>%
  mutate(system = fct_recode(system, "AB" = "AP")) %>%
  mutate(season = stringr::str_to_title(season)) %>%
  arrange(system, .by_group = TRUE) %>%
  relocate(season, .before = system)

sigFT <- flextable(sigSumPrep) %>%
  #separate_header() %>%
  merge_v(j = ~ season) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  labelizor(part = "header", 
  labels = stringr::str_to_title) %>%
  set_formatter(sigPercent = function(x) sprintf("%.1f%%", x*100),
                posPercent = function(x) sprintf("%.1f%%", x*100),
                negPercent = function(x) sprintf("%.1f%%", x*100)
               ) %>%
  set_header_labels(count = "Taxa counted",
    sigPercent = "Change overall",
    posPercent = "Positive change",
    negPercent = "Negative change") %>%
  width(width = 1) %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")

sigFT

```

Overall, most taxa that had significant changes in abundance were either tropical/subtropical-associated or tropical/subtropical/temperate-associated and experienced rather modest changes, yet a few taxa had rates of change an order of magnitude greater than the rest ([@tbl-ecoSlopes]; [@fig-sigSlopes]).

```{r}
#| label: ecoSlopes prep
#| include: FALSE

sigSlopesEcoC <- sigSlopes %>%
  left_join(sigEco) %>%
  filter(!is.na(tempLogic)) %>%
  mutate(naming = systemSeason) %>%
  separate(naming,
            c("system","season"),
            sep = "_",
           remove = FALSE) %>%
  mutate(title = ifelse(system == "CH", "Charlotte Harbor",
                        ifelse(system == "TB", "Tampa Bay",
                               ifelse(system == "AP", "Apalachicola",
                                      "Cedar Key")))) %>%
    separate(systemSeason, into = c("system", "season"), remove = FALSE) %>%
  mutate(season = stringr::str_to_title(season)) %>%
  mutate(system = factor(system, levels = c("AP", "CK", "TB", "CH"))) %>%
  mutate(system = fct_recode(system, "AB" = "AP")) %>%
  mutate(Scientificname = factor(Scientificname, levels = levels(ssGrouped$Scientificname))) %>%
  mutate(Scientificnumber = as.numeric(Scientificname)) %>%
  unite(col = seaSys, system, season, sep = " ", remove = FALSE) %>%
  mutate(tempLogic = factor(tempLogic, levels = c("tropical",
                                   "tropical/subtropical",
                                   "tropical/temperate",
                                   "tropical/subtropical/temperate", "subtropical",   "subtropical/temperate", "temperate"))) %>%
  mutate(tempLogic = fct_recode(tempLogic,
                                   'Tropical' = "tropical",
                                   'Tropical' = "tropical/subtropical",
                                   'Ubiquitous' = "tropical/temperate",
                                   'Ubiquitous' = "tropical/subtropical/temperate",
                                   'Subtropical' = "subtropical",
                                   'Temperate' = "subtropical/temperate",
                                   
                                    'Temperate' = "temperate"))


sigEcoSlopesPos <- sigSlopesEcoC %>%
  ungroup() %>%
  separate(systemSeason,
           c("system","season"),
           sep = "_") %>%
  group_by(system, season, tempLogic) %>%
  filter(raw_slope > 0) %>%
  summarise(posCount = n_distinct(Scientificnumber))
  
#and the negative slopes
sigEcoSlopesNeg <- sigSlopesEcoC %>%
  ungroup() %>%
  separate(systemSeason,
           c("system","season"),
           sep = "_") %>%
  group_by(system, season, tempLogic) %>%
  filter(raw_slope< 0) %>%
  summarise(negCount = n_distinct(Scientificnumber))

ecoTable <- sigEcoSlopesPos %>%
  ungroup() %>%
  left_join(sigEcoSlopesNeg) %>% 
  replace(is.na(.), 0) %>%
  mutate(system = factor(system, levels = c("AP", "CK", "TB", "CH"))) %>%
  #complete(system, season, tempLogic) %>%
  arrange(season, system, tempLogic) %>%
  ungroup() %>%
  group_by(system, season) %>%
  mutate(sigCount = sum(posCount + negCount, na.rm = TRUE)) %>%
  ungroup() %>%
  group_by(season, system, tempLogic) %>%
  mutate(posPercent = posCount/sigCount) %>%
  mutate(negPercent = negCount/sigCount)
```

```{r}
#| label: tbl-ecoSlopes
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| tbl-cap: "Climatological associations of taxa that significantly changed over time. Percentages listed are calculated with respect to number of taxa with available climate data."

ecoFT <- ecoTable %>%
  relocate(season, .before = system) %>%
  mutate(season = stringr::str_to_title(season)) %>%
  select(!c(posCount, negCount, sigCount)) %>%
  mutate(system = fct_recode(system, "AB" = "AP")) %>%
  flextable() %>%
  merge_v(j = ~ season) %>%
  merge_v(j = ~ system) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  labelizor(part = "header", 
  labels = stringr::str_to_title) %>%
  set_formatter(posPercent = function(x) sprintf("%.1f%%", x*100),
                negPercent = function(x) sprintf("%.1f%%", x*100)
               ) %>%
  set_header_labels(count = "Taxa counted",
    sigCount = "Change overall",
    posPercent = "Positive change",
    negPercent = "Negative change",
    tempLogic = "Climatology") %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")

ecoFT

```

```{r}
#| label: fig-sigSlopes
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| fig-width: 6.5
#| fig-height: 7.25
#| fig-cap: "Coefficients of change of transformed mean annual taxa abundance over time plotted per system and season. Red indicates a negative change over time and blue indicates a positive change. The dashed line represents a slope of 0. Error bars represent Â± 1 standard error. Numbers on *y*-axis correspond to individual taxa, see [@tbl-ssKey] for key."

#get unique list for the loop
seasysKey <- unique(ssGrouped$systemSeason)

sigPlotsFree <- list()
for (i in seasysKey){
  #print(i)
  gf <- ssGrouped %>%
    filter(systemSeason == i)
  
  sigPlotsFree[[i]] <- ggplot(gf,
         aes(y = reorder(Scientificnumber, slope, decreasing = TRUE),
             x = slope)) + 
    geom_point(aes(color = as.factor(id_color))) +
    geom_vline(xintercept = 0, linetype="dashed") +
    scale_color_manual(values = c("red","blue")) +
    facet_grid(~seaSys,
             scales = "free_y") +
    geom_errorbarh(aes(xmin=(slope + (-1*stderr)), xmax=(slope + (1*stderr))),
                   color = "black") + #std err bars
    scale_x_continuous(trans = pseudolog10_trans) +

    #ggtitle("Change in density over time by group") + 
    theme_bw() +
    theme(legend.position = "none",
          # axis.title.y = element_blank(),
          # axis.title.x = element_blank(),
          axis.text.y = element_text(size = 7)
    ) +
    labs(x = "Coefficient of change",
         y = "Taxon code") +
    #coord_cartesian(xlim = c(-.2, 0.2)) +
  theme(text = element_text(family = 'serif'))
}

sigSlopesAllFree <- wrap_plots(sigPlotsFree, ncol = 2) +
  plot_layout(
    guides = "collect",
    axis_titles = "collect"
  )

sigSlopesAllFree
```

# Discussion {#sec-discussion}

Within the context of ever-changing environmental parameters, it is somewhat surprising how stable these estuarine systems seem to be at the community level. Water temperatures are increasing in all systems at rates aligned with previous work characterizing the global phenomenon of estuarine warming [rates of 0.015 to 0.2Â°Câ€‰yr^âˆ’1^; per @bashevkin2022]. Total richness is largely unchanged across all systems. This is somewhat expected, given work by Dornelas et al., where winners and losers are generally balanced among ecosystems globally [-@Dornelas2019]. However, this does not capture the full story. Within total richness, the individual taxa at play are indeed changing. For summer, this is very well balanced. In winter in these systems, there is less of a balance.

SAV is all over the place... and total abundance dynamics are quite complex. TB summer increasing. AB winter decreasing. Temp not sig in summer. Temp mostly sig in winter (not CK) - warmer = more critters. SAV mostly sig across the board (not CK). Positive for all cases EXCEPT AB winter ... more SAV = less critters. This is odd.

AB winter seeing a decrease, while temp is increasing and temp is positively correlated. SAV is not changing though and more SAV means less critters. Hm.

## Habitat Dynamics

Rate of increase in winter being so much higher is interesting. Is this in line with global stuff?

SAV all over the place... needs qualified. No change in AB is kind of unexpected.

Overall, CK may have some other dynamics going on and was not well captured.

## Faunal Dynamics

The faunal dynamics... total richness remaining unchanged is interesting. Aligns with winners/losers being well balanced at the system level. Within season, it makes sense to see more change in winter given the general trend of stability observed in the habitat dynamics for summer. Abundance data changing a lot is not surprising.

More species changing positively in winter maybe is a sign of more species invading? Overall percentage of change is not really different compared to summer.

CAP ordinations suggest most change happens gradually. Cedar Key again shows up as an outlier... and has a distinct separation between groups of years (summer pre/post 2010). Maybe this is the cold snap/extreme heat and legacy effects? Similar in RDA, but difference is in spread of points (CK is broad).

Loss of Spot over time is interesting. Spot plot? Larval supply issues? Lots more to explore beyond scope of the project. Does not show up in univariate plots except for AB.

Other taxa changes could be more specific. Need to look for commonalities -\> No single taxa sig change for all systems in either season... at least univariate.

# Conclusion {#sec-conclusion}

{{< pagebreak >}}

# Supplemental Materials {#sec-supplemental-materials .appendix}

### Univariate Key

```{r}
#| label: tbl-ssKey
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "Key to taxa in univariate analyses plots."

ssKey <- ssGrouped %>%
  select(Scientificnumber, Scientificname) %>%
  arrange(Scientificnumber) %>%
  distinct() %>%
  flextable(.) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  italic(j = 2) %>%
  set_header_labels(
    Scientificname = "Scientific name",
    Scientificnumber = "Species ID key") %>%
  autofit() %>%
  theme_vanilla() %>%
  font(part = "all",
       fontname = "Times New Roman")

ssKey
```

### Temp ANCOVA

```{r}
#| label: tbl-tempAncova 
#| echo: FALSE 
#| message: FALSE 
#| tbl-cap: "Outputs of water temperature ANCOVA models." 

# pander(summerSummary)
# pander(winterSummary)

tempANCOVAft <- summerFinalTidy %>%
  mutate(Season = "Summer", .before = term) %>%
  full_join(winterFinalTidy) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season)) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("estimate", "std.error",
                             "p.value"), digits = 3) %>%
  colformat_double(j = c("statistic"), digits = 2) %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(term = "Term", 
    estimate = "Estimate", 
    std.error = "Standard error",
    statistic = "t-statistic",
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(2:6)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla()

tempANCOVAft
```

```{r}
#| label: tbl-tempMeanContrasts
#| echo: FALSE 
#| message: FALSE 
#| tbl-cap: "Least square means of each system for both seasonal linear models. *P*-values for pairwise contrasts used Tukey method for correction." 

tempCont <- as.data.frame(summary(summerMeansLm$contrasts)) %>%
  mutate(Season = "Summer", .before = contrast) %>%
  full_join(as.data.frame(summary(winterMeansLm$contrasts))) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season),
         contrast = ifelse(contrast == "CK - AP", "CK - AB",
                            ifelse(contrast == "TB - AP", "TB - AB",
                                   ifelse(contrast == "CH - AP", "CH - AB", contrast)))) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("estimate", "SE",
                             "p.value"), digits = 3) %>%
  colformat_double(j = c("t.ratio"), digits = 2) %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(contrast = "Contrast", 
    estimate = "Estimate", 
    SE = "Standard error",
    t.ratio = "t-statistic",
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(2:7)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla()
  
tempCont
```

```{r}
#| label: tbl-bvcMeanContrasts
#| echo: FALSE 
#| message: FALSE 
#| tbl-cap: "Least square means of each system for both seasonal linear models. *P*-values for pairwise contrasts used Tukey method for correction." 

bvcmeanCont <- as.data.frame(summary(summerSummaryBVCAll$contrasts)) %>%
  mutate(Season = "Summer", .before = contrast) %>%
  full_join(as.data.frame(summary(winterSummaryBVCAll$contrasts))) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season),
         contrast = ifelse(contrast == "CK - AP", "CK - AB",
                            ifelse(contrast == "TB - AP", "TB - AB",
                                   ifelse(contrast == "CH - AP", "CH - AB", contrast)))) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("estimate", "SE",
                             "p.value"), digits = 3) %>%
  colformat_double(j = c("t.ratio"), digits = 2) %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(contrast = "Contrast", 
    estimate = "Estimate", 
    SE = "Standard error",
    t.ratio = "t-statistic",
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(2:7)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla()
  
bvcmeanCont

```

#### OLD STUFF

#### Synthesis tables

```{r}
#| label: tbl-habParamSyn
#| echo: FALSE
#| tbl-cap: "Summary of observed habitat parameter trends per system and season. + indicates positive trend, - indicates negative trend, and 0 indicates no trend. Trend direction calculated using ANCOVA framework and significant at alpha 0.95."


habParam <- data.frame(
  Season = c("Summer", "Summer", "Winter", "Winter"),
  Parameter = c("Water temperature", "SAV coverage", "Water temperature", "SAV coverage"), 
  System_AB = c("+", "0", "+", "0"), 
  System_CK = c("+", "-", "+", "0"),
  System_TB = c("+", "0", "+", "+"),
  System_CH = c("+", "+", "+", "+"))

habParamFT <- flextable(habParam) %>%
  separate_header() %>%
  merge_v(j = ~ Season) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla()

habParamFT
```

```{r}
#| label: tbl-abundSyn
#| echo: FALSE
#| tbl-cap: "Summary of observed total abundance response correlations per system and season from total abundance models. + indicates positive correlation, - indicates negative correlation, and 0 indicates no correlation. Correlation direction calculated using GLMM framework and significant at alpha 0.95."

sumTab <- data.frame(
  Season = c("Summer", "Summer", "Summer", "Winter", "Winter", "Winter"),
  Parameter = c("Water temperature", "SAV coverage", "Total abundance", "Water temperature", "SAV coverage", "Total abundance"), 
  System_AB = c("0", "+", "0", "+", "+", "Decreased"), 
  System_CK = c("0", "0", "0", "0", "0", "0"),
  System_TB = c("0", "+", "Increased", "+", "+", "0"),
  System_CH = c("0", "+", "0", "+", "+", "0"))

sumFT <- flextable(sumTab) %>%
  separate_header() %>%
  merge_v(j = ~ Season) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  width(j = 3:6, 1) %>%
  theme_vanilla()

# habParamFT
# 
# sumFT <- flextable(sumTab) %>%
#   merge_v(j = ~ Parameter + Effect) %>%
#   paginate(init = TRUE, hdr_ftr = TRUE) %>%
#   autofit() %>%
#   theme_vanilla()

sumFT
```

```{r}
#| label: tbl-richSyn
#| echo: FALSE
#| tbl-cap: "Summary of observed total richness response trends per system and season from total richness models. + indicates positive correlation, - indicates negative correlation, and 0 indicates no correlation. Correlation direction calculated using GLMM framework and significant at alpha 0.95."

richTab <- data.frame(
  Season = c("Summer", "Summer", "Summer", "Winter", "Winter", "Winter"),
  Parameter = c("Water temperature", "SAV coverage", "Total richness", "Water temperature", "SAV coverage", "Total richness"), 
  System_AB = c("0", "+", "0", "+", "+", "0"), 
  System_CK = c("0", "+", "0", "+", "+", "0"),
  System_TB = c("0", "+", "0", "+", "+", "0"),
  System_CH = c("0", "+", "0", "+", "+", "0"))

richFT <- flextable(richTab) %>%
  separate_header() %>%
  merge_v(j = ~ Season) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  width(j = 3:6, 1) %>%
  theme_vanilla()

richFT
```

##Temp ANCOVA contrasts

```{r}
#| label: tbl-tempAncovaContrast 
#| echo: FALSE 
#| message: FALSE 
#| tbl-cap: "Contrasts from ANCOVA models. Tukey method applied for p-value correction." 

tempCont <- as.data.frame(summary(summerSummaryAll$contrasts)) %>%
  mutate(Season = "Summer", .before = contrast) %>%
  full_join(as.data.frame(summary(winterSummaryAll$contrasts))) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season),
         contrast = ifelse(contrast == "CK - AP", "CK - AB",
                            ifelse(contrast == "TB - AP", "TB - AB",
                                   ifelse(contrast == "CH - AP", "CH - AB", contrast)))) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("estimate", "SE",
                             "t.ratio", "p.value"), digits = 3) %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(contrast = "Contrast", 
    estimate = "Estimate", 
    SE = "Standard error",
    t.ratio = "t-statistic",
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(2:7)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla()
  
tempCont

```

##SAV ANCOVA outputs SAV ANCOVA calculated means

```{r}
#| label: tbl-bvcMeanss 
#| echo: FALSE 
#| message: FALSE 
#| tbl-cap: "Least square means of each system for both seasonal linear models." 

bvcMeans <- summerSumBVCAll  %>%
  mutate(season = "summer") %>%
  full_join(winterSumBVCAll) %>%
  mutate(season = ifelse(!is.na(season), "summer", "winter")) %>%
  select(system, season, estimate, std.error) %>%
  mutate(std.error = format(std.error, digits = 3))

pander(bvcMeans)
```

SAV ANCOVA contrasts

```{r}
#| label: tbl-bvcAncovaContrast 
#| echo: FALSE 
#| message: FALSE 
#| tbl-cap: "Contrasts from ANCOVA models. Tukey method applied for p-value correction." 

bvcCont <- as.data.frame(summary(summerBVCContrasts$contrasts)) %>%
  mutate(Season = "Summer", .before = contrast) %>%
  full_join(as.data.frame(summary(winterBVCContrasts$contrasts))) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season),
         contrast = ifelse(contrast == "CK - AP", "CK - AB",
                            ifelse(contrast == "TB - AP", "TB - AB",
                                   ifelse(contrast == "CH - AP", "CH - AB", contrast)))) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("estimate", "SE",
                             "t.ratio", "p.value"), digits = 3) %>%
  set_formatter(p.value = function(x) scales::pvalue(x)) %>%
  set_header_labels(contrast = "Contrast", 
    estimate = "Estimate", 
    SE = "Standard error",
    t.ratio = "t-statistic",
    p.value = "p-value") %>%
  bold(~ p.value <0.05, c(2:7)) %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla()
  
bvcCont

```

Abundance GLMMs

```{r}
#| label: tbl-abundModelsEmmeans
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "Estimated marginal means of total abundance for each system for both seasonal GLMMs. *P*-values for pairwise contrasts used tukey method for correction."

abMeanOut2 <- as.data.frame(summary(abundMeanS$emmeans)) %>%
  mutate(Season = "Summer", .before = system) %>%
  full_join(as.data.frame(summary(abundMeanW$emmeans))) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season),
         system = fct_recode(system, "AB" = "AP")) %>%
  select(!c(lower.CL, upper.CL)) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("emmean", "SE"), digits = 3) %>%
  set_header_labels(system = "System",
    emmean = "Estimated mean",
    SE = "Standard error") %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla()

abMeanOut2
```

```{r}
#| label: tbl-abundModelsRaw
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "Outputs of fixed effects from total abundance GLMMs run within each system. Bolded values are significant at alpha 0.05."
#| tbl-subcap: 
#|   - "summer"
#|   - "winter"
#|   - "summerMeans"
#|   - "summerTrends"
#|   - "winterMeans"
#|   - "winterTrends"

emphasize.strong.rows(conditionS)
pander(abundFullS)
emphasize.strong.rows(conditionW)
pander(abundFullW)
pander(tidy(abundMeanS$contrasts) %>%
         select(!c(term, null.value)))
pander(tidy(abundContS$contrasts) %>%
         select(!c(term, null.value)))
pander(tidy(abundMeanW$contrasts) %>%
         select(!c(term, null.value)))
pander(tidy(abundContW$contrasts) %>%
         select(!c(term, null.value)))
```

Taxa groups

```{r}
#| label: fig-sigSlopes_grouped
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| fig-width: 6.5
#| fig-height: 5
#| fig-cap: "Taxonomically-grouped slopes of abundance over time plotted per system and season. Red indicates a negative change over time and blue indicates a positive change. The dashed line represents a slope of 0."

#sigSlopesGroups

ggplot(ssGrouped,
       aes(y = group,
           x = raw_slope)) + 
  geom_point(aes(color = as.factor(id_color))) +
  scale_color_manual(values = c("red","blue")) +
    facet_grid(season~system,
             scales = "free_y") +
  # geom_errorbarh(aes(xmin=(raw_slope + (-2*stderr)), xmax=(raw_slope + (2*stderr))),
  #                color = "black") + #std err bars
  scale_x_continuous(trans = pseudolog10_trans) +
  labs(x = "Raw slope") + 
  theme_bw() +
  theme(legend.position = "none",
        axis.title.y = element_blank()
        ) +
  #coord_cartesian(xlim = c(-.2, 0.2)) +
  geom_vline(xintercept = 0, linetype="dashed")
```

### Richness GLMMs

Results from post-hoc tests on total richness GLMMs indicated modeled average richness of Apalachicola Bay in summer was greater than all other systems, with no significant difference in means among the other three (*t* â‰¥ `r format(abs(as.data.frame(richMeanS$contrasts)$t.ratio[1]), digits = 3)` for all *p* \<0.05 [@tbl-richModelsRaw]). In winter, modeled average richness was more nuanced ([@tbl-richModelsRaw]; see also [@tbl-richModelsRaw] for full output). Further, results of the GLMMs indicated that total richness was positively correlated with SAV for all systems and seasons. As with total abundance, water temperature was not significant in any systems during the summer but was again positively associated with total richness in all systems in winter ([@tbl-richModelsRaw]). Further, total richness had no discernible trends over time in any of the systems or seasons ([@tbl-richSyn]).

```{r}
#| label: tbl-richModelsRaw
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "Outputs of fixed effects from total richness GLMMs run within each system. Bolded values are significant at alpha 0.05."
#| tbl-subcap: 
#|   - "summer"
#|   - "winter"
#|   - "summerMeans"
#|   - "summerTrends"
#|   - "winterMeans"
#|   - "winterTrends"

richFullS <- broom.mixed::tidy(glmmOutRS, effects = "fixed") %>%
  select(term, estimate, std.error, p.value)
conditionRS <- which(richFullS$p.value < 0.05)

richFullW <- broom.mixed::tidy(glmmOutRW, effects = "fixed") %>%
  select(term, estimate, std.error, p.value)
conditionRW <- which(richFullW$p.value < 0.05)

richMeanS <- emmeans(glmmOutRS, spec = "system", contr = "revpairwise")
richMeanW <- emmeans(glmmOutRW, spec = "system", contr = "revpairwise")

emphasize.strong.rows(conditionRS)
pander(richFullS)
emphasize.strong.rows(conditionRW)
pander(richFullW)
pander(tidy(richMeanS$contrasts) %>%
         select(!c(term, null.value)))
pander(tidy(richContS$contrasts) %>%
         select(!c(term, null.value)))
pander(tidy(richMeanW$contrasts) %>%
         select(!c(term, null.value)))
pander(tidy(richContW$contrasts) %>%
         select(!c(term, null.value)))
```

```{r}
#| label: tbl-richMeans
#| echo: FALSE
#| message: FALSE
#| tbl-cap: "Estimated marginal means of total richness for each system for both seasonal GLMMs. *P*-values for pairwise contrasts used tukey method for correction."

richMeanOut <- as.data.frame(summary(richMeanS$emmeans)) %>%
  mutate(Season = "Summer", .before = system) %>%
  full_join(as.data.frame(summary(richMeanW$emmeans))) %>%
  mutate(Season = ifelse(is.na(Season), "Winter", Season),
         system = fct_recode(system, "AB" = "AP")) %>%
  select(!c(lower.CL, upper.CL)) %>%
  flextable(.) %>%
  merge_v(j = ~ Season) %>%
  colformat_double(j = c("emmean", "SE"), digits = 3) %>%
  set_header_labels(system = "System", 
    emmean = "Estimated mean", 
    SE = "Standard error") %>%
  paginate(init = TRUE, hdr_ftr = TRUE) %>%
  autofit() %>%
  theme_vanilla()
  
richMeanOut
```

Beta diversity model outputs

```{r}
#| label: tbl-betaModels 
#| echo: FALSE 
#| message: FALSE 
#| tbl-cap: "Outputs of ANCOVA models for beta diversity." 
#| tbl-subcap:
#|   - "Summer"
#|   - "Winter"

conditionbetaS <- which(betaSummerSummary$p.value < 0.05)
conditionbetaW <- which(betaWinterSummary$p.value < 0.05)
emphasize.strong.rows(conditionbetaS)
kable(betaSummerSummary)
emphasize.strong.rows(conditionbetaW) 
kable(betaWinterSummary)

```

```{r}
#| label: fig-ecoSlopes
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| fig-width: 6.5
#| fig-height: 9
#| fig-cap: "Slopes of taxa abundance over time plotted per system and season. Red indicates a negative change over time and blue indicates a positive change. The dashed line represents a slope of 0. Error bars represent Â± 1 standard error. Climatological association is represented by the symbol shape. Note: not all climatalogical associations for all taxa were available and thus some are not displayed. Numbers on y-axis correspond to individual taxa, see [@tbl-ssKey] for key."

#need to plot with patchwork to keep fish lists different per plot
plotsEcoC <- list() #initialize object
#use actual values from the key list
for (i in seasysKey){
  #filter by key values
  plotup <- sigSlopesEcoC %>%
    filter(systemSeason == i)
  
  #make list of plots from the filtered plotup DF
  plotsEcoC[[i]] = ggplot(plotup,
                      aes(y = reorder(Scientificnumber, raw_slope), #order by decreasing slope top to bottom
                          x = raw_slope,
                          shape = tempLogic)) + 
    geom_point(aes(color = cut(raw_slope, c(-Inf, 0, Inf))), #cut the slope data for +/- colors
               size = 3) +
    scale_color_manual(name = "slope", #define the +/- colors
                       values = c("(0, Inf]" = "blue",
                                  "(-Inf,0]" = "red"),
                       labels = c("pos", "neg"),
                       guide = "none") +
    geom_errorbarh(aes(xmin=(raw_slope + (-1*stderr)), xmax=(raw_slope + (1*stderr))),
                   color = "black") + #std err bars
    scale_shape_manual( #need to force legends to be identical (i.e. show all possibilities) to merge w/ patchwork
      breaks = c(
        "tropical",
        "subtropical",
        "tropical/subtropical",
        "temperate",
        "tropical/temperate",
        "subtropical/temperate",
        "tropical/subtropical/temperate"
      ),
      values = c(15, 16, 17, 18, 0, 1, 2), #use scale shape identities
      drop = FALSE
    ) +
    #ggtitle(i) + #dynamic title using the key value
    scale_x_continuous(trans = pseudolog10_trans,
                       limits = symmetric_range) +
    #xlim(-.2, .2) +
    #scale_x_continuous(limits = symmetric_range) +
    geom_vline(xintercept = 0, linetype="dashed") +
        facet_grid(~seaSys,
             scales = "free_y") +
    theme_bw() +
    labs(shape = "Climatology") + #dynamic title using the formatted values
    theme(axis.title.y=element_blank(),
          axis.title.x = element_blank())
}

finalEcoC <- wrap_plots(plotsEcoC, ncol = 2, guides = "collect") &
  labs() & theme(plot.margin = margin(5.5, 5.5, 0, 5.5)) & theme(legend.position = 'bottom',
                                                                 legend.text = element_text(size = 6))

# Use the tag label as an x-axis label
finalEcoC <- wrap_elements(panel = finalEcoC) +
  labs(tag = "Raw slope of abundance change") +
  theme(
    plot.tag = element_text(size = rel(1)),
    plot.tag.position = "bottom"
  )

finalEcoC
```

{{< pagebreak >}}

# References {#sec-references .appendix}
